type Group {
  id: ID
  name: String
  groupParticipants: [GroupParticipant!]
}

input GroupCreateInput {
  id: ID
  name: String!
  # groupParticipants: GroupParticipantCreateManyWithoutGroupIdInput
}

type GroupParticipant {
  id: ID!
  groupId: Group
  userId: User
  name: String!
}

input GroupParticipantCreateInput {
  id: ID
  groupId: String
  userId: String
  name: String!
}

type Query {
  groups: [Group]!
  group(id: ID): Group
}

type Mutation {
  createGroup(data: GroupCreateInput!): Group!
  createGroupParticipant(data: GroupParticipantCreateInput!): GroupParticipant!
}
