{
  "{\"sourceRoot\":\"/Users/choiminji/Desktop/workspace/rbs-backend/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/choiminji/Desktop/workspace/rbs-backend\",\"filename\":\"/Users/choiminji/Desktop/workspace/rbs-backend/src/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/choiminji/Desktop/workspace/rbs-backend\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/choiminji/Desktop/workspace/rbs-backend/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/choiminji/Desktop/workspace/rbs-backend",
      "filename": "/Users/choiminji/Desktop/workspace/rbs-backend/src/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/choiminji/Desktop/workspace/rbs-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/choiminji/Desktop/workspace/rbs-backend/src/server.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/choiminji/Desktop/workspace/rbs-backend/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/choiminji/Desktop/workspace/rbs-backend/src",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _graphqlYoga = require(\"graphql-yoga\");\n\nvar _schema = _interopRequireDefault(require(\"./schema\"));\n\nvar _googleOauth = _interopRequireDefault(require(\"./auth/googleOauth\"));\n\nvar _jwt = _interopRequireDefault(require(\"./auth/jwt\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _passport = _interopRequireDefault(require(\"passport\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\n_dotenv[\"default\"].config(); //.env 파일 로드\n\n\nvar logger = require(\"morgan\");\n\nvar PORT = process.env.PORT || 4000;\nvar server = new _graphqlYoga.GraphQLServer({\n  schema: _schema[\"default\"]\n});\nvar jwtSecret = process.env.JWT_SECRET;\n\n_passport[\"default\"].use(_jwt[\"default\"]);\n\nserver.express.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n}));\nserver.express.use(_bodyParser[\"default\"].json());\nserver.express.use(_passport[\"default\"].initialize()); // passport 구동\n\nserver.express.use(_passport[\"default\"].session()); // 세션 연결\n\nvar allowCrossDomain = function allowCrossDomain(req, res, next) {\n  /**\n   * :3000, :4000 으로 crossBrowsing 이슈 때문에 구현\n   */\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Headers\", \"*\");\n  next();\n};\n\nserver.express.use(allowCrossDomain); // server.express.get(\"/auth\");\n\n_passport[\"default\"].serializeUser(function (user, done) {\n  // Strategy 성공 시 호출됨\n  // console.log(\"serializeUser\");\n  done(null, user); // 여기의 user가 deserializeUser의 첫 번째 매개변수로 이동\n});\n\n_passport[\"default\"].deserializeUser(function (user, done) {\n  // console.log(\"deserializeUser\");\n  // 매개변수 user는 serializeUser의 done의 인자 user를 받은 것\n  done(null, user); // 여기의 user가 req.user가 됨\n});\n\n_passport[\"default\"].use(_googleOauth[\"default\"]);\n\nserver.express.get(\"/auth/google\", _passport[\"default\"].authenticate(\"google\", {\n  scope: [\"https://www.googleapis.com/auth/plus.login\", \"email\"]\n}));\nserver.express.get(\"/auth/google/callback\", _passport[\"default\"].authenticate(\"google\", {\n  failureRedirect: \"/login\"\n}), function (req, res) {\n  /**\n   * google API로 인증받은 후 front-end 로 controll 넘겨서 처리\n   */\n  var _req$user = req.user,\n      flag = _req$user.flag,\n      data = _req$user.data; // console.log(req.user);\n\n  if (flag) {\n    res.redirect(\"http://localhost:3000/callback/login?email=\" + data.email); // res.redirect(\n    //   \"https://rbsdemo.netlify.com/callback/login?email=\" + data.email\n    // );\n  } else {\n    res.redirect(\"http://localhost:3000/callback/join?email=\" + data.email); // res.redirect(\n    //   \"https://rbsdemo.netlify.com/callback/login?email=\" + data.email\n    // );\n  }\n});\nserver.express.post(\"/auth/jwt\",\n/*#__PURE__*/\nfunction () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee(req, res) {\n    var email, opts, token;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // console.log(\"req body\", req.body);\n            email = req.body.email;\n            opts = {\n              expiresIn: \"60m\"\n            };\n            token = _jsonwebtoken[\"default\"].sign({\n              email: email\n            }, jwtSecret, opts);\n            return _context.abrupt(\"return\", res.status(200).json({\n              flag: true,\n              jwtToken: token\n            }));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\nserver.express.post(\"/auth/jwt/check\", _passport[\"default\"].authenticate(\"jwt\", {\n  session: false\n}), function (req, res) {\n  return res.json({\n    flag: true,\n    user: req.user\n  });\n});\nserver.express.use(logger(\"dev\"));\nserver.start({\n  port: PORT\n}, function () {\n  console.log(\"========>> Server running on http://localhost:\".concat(PORT));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "dotenv",
        "config",
        "logger",
        "require",
        "PORT",
        "process",
        "env",
        "server",
        "GraphQLServer",
        "schema",
        "jwtSecret",
        "JWT_SECRET",
        "passport",
        "use",
        "JwtStrategy",
        "express",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "initialize",
        "session",
        "allowCrossDomain",
        "req",
        "res",
        "next",
        "header",
        "serializeUser",
        "user",
        "done",
        "deserializeUser",
        "GoogleStrategy",
        "get",
        "authenticate",
        "scope",
        "failureRedirect",
        "flag",
        "data",
        "redirect",
        "email",
        "post",
        "body",
        "opts",
        "expiresIn",
        "token",
        "jwt",
        "sign",
        "status",
        "jwtToken",
        "start",
        "port",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACAA,mBAAOC,MAAP,G,CAAiB;;;AAEjB,IAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACA,IAAMG,MAAM,GAAG,IAAIC,0BAAJ,CAAkB;AAAEC,EAAAA,MAAM,EAANA;AAAF,CAAlB,CAAf;AACA,IAAMC,SAAS,GAAGL,OAAO,CAACC,GAAR,CAAYK,UAA9B;;AAEAC,qBAASC,GAAT,CAAaC,eAAb;;AAEAP,MAAM,CAACQ,OAAP,CAAeF,GAAf,CAAmBG,uBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAnB;AACAX,MAAM,CAACQ,OAAP,CAAeF,GAAf,CAAmBG,uBAAWG,IAAX,EAAnB;AAEAZ,MAAM,CAACQ,OAAP,CAAeF,GAAf,CAAmBD,qBAASQ,UAAT,EAAnB,E,CAA2C;;AAC3Cb,MAAM,CAACQ,OAAP,CAAeF,GAAf,CAAmBD,qBAASS,OAAT,EAAnB,E,CAAwC;;AAExC,IAAIC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACzC;;;AAGAD,EAAAA,GAAG,CAACE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,GAA3C;AACAD,EAAAA,IAAI;AACL,CAPD;;AAQAlB,MAAM,CAACQ,OAAP,CAAeF,GAAf,CAAmBS,gBAAnB,E,CAEA;;AAEAV,qBAASe,aAAT,CAAuB,UAACC,IAAD,EAAOC,IAAP,EAAgB;AACrC;AACA;AACAA,EAAAA,IAAI,CAAC,IAAD,EAAOD,IAAP,CAAJ,CAHqC,CAGnB;AACnB,CAJD;;AAMAhB,qBAASkB,eAAT,CAAyB,UAACF,IAAD,EAAOC,IAAP,EAAgB;AACvC;AACA;AACAA,EAAAA,IAAI,CAAC,IAAD,EAAOD,IAAP,CAAJ,CAHuC,CAGrB;AACnB,CAJD;;AAMAhB,qBAASC,GAAT,CAAakB,uBAAb;;AAEAxB,MAAM,CAACQ,OAAP,CAAeiB,GAAf,CACE,cADF,EAEEpB,qBAASqB,YAAT,CAAsB,QAAtB,EAAgC;AAC9BC,EAAAA,KAAK,EAAE,CAAC,4CAAD,EAA+C,OAA/C;AADuB,CAAhC,CAFF;AAOA3B,MAAM,CAACQ,OAAP,CAAeiB,GAAf,CACE,uBADF,EAEEpB,qBAASqB,YAAT,CAAsB,QAAtB,EAAgC;AAAEE,EAAAA,eAAe,EAAE;AAAnB,CAAhC,CAFF,EAGE,UAACZ,GAAD,EAAMC,GAAN,EAAc;AACZ;;;AADY,kBAIWD,GAAG,CAACK,IAJf;AAAA,MAIJQ,IAJI,aAIJA,IAJI;AAAA,MAIEC,IAJF,aAIEA,IAJF,EAKZ;;AACA,MAAID,IAAJ,EAAU;AACRZ,IAAAA,GAAG,CAACc,QAAJ,CAAa,gDAAgDD,IAAI,CAACE,KAAlE,EADQ,CAER;AACA;AACA;AACD,GALD,MAKO;AACLf,IAAAA,GAAG,CAACc,QAAJ,CAAa,+CAA+CD,IAAI,CAACE,KAAjE,EADK,CAEL;AACA;AACA;AACD;AACF,CApBH;AAuBAhC,MAAM,CAACQ,OAAP,CAAeyB,IAAf,CAAoB,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAiC,iBAAOjB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/B;AACQe,YAAAA,KAFuB,GAEbhB,GAAG,CAACkB,IAFS,CAEvBF,KAFuB;AAGzBG,YAAAA,IAHyB,GAGlB;AACXC,cAAAA,SAAS,EAAE;AADA,aAHkB;AAMzBC,YAAAA,KANyB,GAMjBC,yBAAIC,IAAJ,CAAS;AAAEP,cAAAA,KAAK,EAALA;AAAF,aAAT,EAAoB7B,SAApB,EAA+BgC,IAA/B,CANiB;AAAA,6CAQxBlB,GAAG,CAACuB,MAAJ,CAAW,GAAX,EAAgB5B,IAAhB,CAAqB;AAC1BiB,cAAAA,IAAI,EAAE,IADoB;AAE1BY,cAAAA,QAAQ,EAAEJ;AAFgB,aAArB,CARwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjC;;AAAA;AAAA;AAAA;AAAA;AAaArC,MAAM,CAACQ,OAAP,CAAeyB,IAAf,CACE,iBADF,EAEE5B,qBAASqB,YAAT,CAAsB,KAAtB,EAA6B;AAC3BZ,EAAAA,OAAO,EAAE;AADkB,CAA7B,CAFF,EAKE,UAACE,GAAD,EAAMC,GAAN,EAAc;AACZ,SAAOA,GAAG,CAACL,IAAJ,CAAS;AAAEiB,IAAAA,IAAI,EAAE,IAAR;AAAcR,IAAAA,IAAI,EAAEL,GAAG,CAACK;AAAxB,GAAT,CAAP;AACD,CAPH;AAUArB,MAAM,CAACQ,OAAP,CAAeF,GAAf,CAAmBX,MAAM,CAAC,KAAD,CAAzB;AACAK,MAAM,CAAC0C,KAAP,CAAa;AAAEC,EAAAA,IAAI,EAAE9C;AAAR,CAAb,EAA6B,YAAM;AACjC+C,EAAAA,OAAO,CAACC,GAAR,yDAA6DhD,IAA7D;AACD,CAFD",
      "sourceRoot": "/Users/choiminji/Desktop/workspace/rbs-backend/src",
      "sourcesContent": [
        "import { GraphQLServer } from \"graphql-yoga\";\nimport schema from \"./schema\";\nimport GoogleStrategy from \"./auth/googleOauth\";\nimport JwtStrategy from \"./auth/jwt\";\nimport jwt from \"jsonwebtoken\";\nimport passport from \"passport\";\nimport bodyParser from \"body-parser\";\n\nimport dotenv from \"dotenv\";\ndotenv.config(); //.env 파일 로드\n\nconst logger = require(\"morgan\");\n\nconst PORT = process.env.PORT || 4000;\nconst server = new GraphQLServer({ schema });\nconst jwtSecret = process.env.JWT_SECRET;\n\npassport.use(JwtStrategy);\n\nserver.express.use(bodyParser.urlencoded({ extended: false }));\nserver.express.use(bodyParser.json());\n\nserver.express.use(passport.initialize()); // passport 구동\nserver.express.use(passport.session()); // 세션 연결\n\nlet allowCrossDomain = (req, res, next) => {\n  /**\n   * :3000, :4000 으로 crossBrowsing 이슈 때문에 구현\n   */\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Headers\", \"*\");\n  next();\n};\nserver.express.use(allowCrossDomain);\n\n// server.express.get(\"/auth\");\n\npassport.serializeUser((user, done) => {\n  // Strategy 성공 시 호출됨\n  // console.log(\"serializeUser\");\n  done(null, user); // 여기의 user가 deserializeUser의 첫 번째 매개변수로 이동\n});\n\npassport.deserializeUser((user, done) => {\n  // console.log(\"deserializeUser\");\n  // 매개변수 user는 serializeUser의 done의 인자 user를 받은 것\n  done(null, user); // 여기의 user가 req.user가 됨\n});\n\npassport.use(GoogleStrategy);\n\nserver.express.get(\n  \"/auth/google\",\n  passport.authenticate(\"google\", {\n    scope: [\"https://www.googleapis.com/auth/plus.login\", \"email\"]\n  })\n);\n\nserver.express.get(\n  \"/auth/google/callback\",\n  passport.authenticate(\"google\", { failureRedirect: \"/login\" }),\n  (req, res) => {\n    /**\n     * google API로 인증받은 후 front-end 로 controll 넘겨서 처리\n     */\n    const { flag, data } = req.user;\n    // console.log(req.user);\n    if (flag) {\n      res.redirect(\"http://localhost:3000/callback/login?email=\" + data.email);\n      // res.redirect(\n      //   \"https://rbsdemo.netlify.com/callback/login?email=\" + data.email\n      // );\n    } else {\n      res.redirect(\"http://localhost:3000/callback/join?email=\" + data.email);\n      // res.redirect(\n      //   \"https://rbsdemo.netlify.com/callback/login?email=\" + data.email\n      // );\n    }\n  }\n);\n\nserver.express.post(\"/auth/jwt\", async (req, res) => {\n  // console.log(\"req body\", req.body);\n  const { email } = req.body;\n  const opts = {\n    expiresIn: \"60m\"\n  };\n  const token = jwt.sign({ email }, jwtSecret, opts);\n\n  return res.status(200).json({\n    flag: true,\n    jwtToken: token\n  });\n});\nserver.express.post(\n  \"/auth/jwt/check\",\n  passport.authenticate(\"jwt\", {\n    session: false\n  }),\n  (req, res) => {\n    return res.json({ flag: true, user: req.user });\n  }\n);\n\nserver.express.use(logger(\"dev\"));\nserver.start({ port: PORT }, () => {\n  console.log(`========>> Server running on http://localhost:${PORT}`);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569197515291
  },
  "{\"sourceRoot\":\"/Users/choiminji/Desktop/workspace/rbs-backend/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/choiminji/Desktop/workspace/rbs-backend\",\"filename\":\"/Users/choiminji/Desktop/workspace/rbs-backend/src/schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/choiminji/Desktop/workspace/rbs-backend\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/choiminji/Desktop/workspace/rbs-backend/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/choiminji/Desktop/workspace/rbs-backend",
      "filename": "/Users/choiminji/Desktop/workspace/rbs-backend/src/schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/choiminji/Desktop/workspace/rbs-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/choiminji/Desktop/workspace/rbs-backend/src/schema.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/choiminji/Desktop/workspace/rbs-backend/src/schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/choiminji/Desktop/workspace/rbs-backend/src",
        "sourceFileName": "schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _graphqlTools = require(\"graphql-tools\");\n\nvar _mergeGraphqlSchemas = require(\"merge-graphql-schemas\");\n\nvar allTypes = (0, _mergeGraphqlSchemas.fileLoader)(_path[\"default\"].join(__dirname, \"./api/**/*.graphql\"));\nvar allResolvers = (0, _mergeGraphqlSchemas.fileLoader)(_path[\"default\"].join(__dirname, \"./api/**/*.js\"));\nvar schema = (0, _graphqlTools.makeExecutableSchema)({\n  typeDefs: (0, _mergeGraphqlSchemas.mergeTypes)(allTypes),\n  resolvers: (0, _mergeGraphqlSchemas.mergeResolvers)(allResolvers),\n  resolverValidationOptions: {\n    requireResolversForResolveType: false\n  }\n});\nvar _default = schema;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYS5qcyJdLCJuYW1lcyI6WyJhbGxUeXBlcyIsInBhdGgiLCJqb2luIiwiX19kaXJuYW1lIiwiYWxsUmVzb2x2ZXJzIiwic2NoZW1hIiwidHlwZURlZnMiLCJyZXNvbHZlcnMiLCJyZXNvbHZlclZhbGlkYXRpb25PcHRpb25zIiwicmVxdWlyZVJlc29sdmVyc0ZvclJlc29sdmVUeXBlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFFQSxJQUFNQSxRQUFRLEdBQUcscUNBQVdDLGlCQUFLQyxJQUFMLENBQVVDLFNBQVYsRUFBcUIsb0JBQXJCLENBQVgsQ0FBakI7QUFDQSxJQUFNQyxZQUFZLEdBQUcscUNBQVdILGlCQUFLQyxJQUFMLENBQVVDLFNBQVYsRUFBcUIsZUFBckIsQ0FBWCxDQUFyQjtBQUVBLElBQU1FLE1BQU0sR0FBRyx3Q0FBcUI7QUFDbENDLEVBQUFBLFFBQVEsRUFBRSxxQ0FBV04sUUFBWCxDQUR3QjtBQUVsQ08sRUFBQUEsU0FBUyxFQUFFLHlDQUFlSCxZQUFmLENBRnVCO0FBR2xDSSxFQUFBQSx5QkFBeUIsRUFBRTtBQUN6QkMsSUFBQUEsOEJBQThCLEVBQUU7QUFEUDtBQUhPLENBQXJCLENBQWY7ZUFRZUosTSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY2hvaW1pbmppL0Rlc2t0b3Avd29ya3NwYWNlL3Jicy1iYWNrZW5kL3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwYXRoIGZyb20gXCJwYXRoXCI7XG5pbXBvcnQgeyBtYWtlRXhlY3V0YWJsZVNjaGVtYSB9IGZyb20gXCJncmFwaHFsLXRvb2xzXCI7XG5pbXBvcnQgeyBmaWxlTG9hZGVyLCBtZXJnZVR5cGVzLCBtZXJnZVJlc29sdmVycyB9IGZyb20gXCJtZXJnZS1ncmFwaHFsLXNjaGVtYXNcIjtcblxuY29uc3QgYWxsVHlwZXMgPSBmaWxlTG9hZGVyKHBhdGguam9pbihfX2Rpcm5hbWUsIFwiLi9hcGkvKiovKi5ncmFwaHFsXCIpKTtcbmNvbnN0IGFsbFJlc29sdmVycyA9IGZpbGVMb2FkZXIocGF0aC5qb2luKF9fZGlybmFtZSwgXCIuL2FwaS8qKi8qLmpzXCIpKTtcblxuY29uc3Qgc2NoZW1hID0gbWFrZUV4ZWN1dGFibGVTY2hlbWEoe1xuICB0eXBlRGVmczogbWVyZ2VUeXBlcyhhbGxUeXBlcyksXG4gIHJlc29sdmVyczogbWVyZ2VSZXNvbHZlcnMoYWxsUmVzb2x2ZXJzKSxcbiAgcmVzb2x2ZXJWYWxpZGF0aW9uT3B0aW9uczoge1xuICAgIHJlcXVpcmVSZXNvbHZlcnNGb3JSZXNvbHZlVHlwZTogZmFsc2VcbiAgfVxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHNjaGVtYTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "schema.js"
      ],
      "names": [
        "allTypes",
        "path",
        "join",
        "__dirname",
        "allResolvers",
        "schema",
        "typeDefs",
        "resolvers",
        "resolverValidationOptions",
        "requireResolversForResolveType"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,QAAQ,GAAG,qCAAWC,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,oBAArB,CAAX,CAAjB;AACA,IAAMC,YAAY,GAAG,qCAAWH,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,eAArB,CAAX,CAArB;AAEA,IAAME,MAAM,GAAG,wCAAqB;AAClCC,EAAAA,QAAQ,EAAE,qCAAWN,QAAX,CADwB;AAElCO,EAAAA,SAAS,EAAE,yCAAeH,YAAf,CAFuB;AAGlCI,EAAAA,yBAAyB,EAAE;AACzBC,IAAAA,8BAA8B,EAAE;AADP;AAHO,CAArB,CAAf;eAQeJ,M",
      "sourceRoot": "/Users/choiminji/Desktop/workspace/rbs-backend/src",
      "sourcesContent": [
        "import path from \"path\";\nimport { makeExecutableSchema } from \"graphql-tools\";\nimport { fileLoader, mergeTypes, mergeResolvers } from \"merge-graphql-schemas\";\n\nconst allTypes = fileLoader(path.join(__dirname, \"./api/**/*.graphql\"));\nconst allResolvers = fileLoader(path.join(__dirname, \"./api/**/*.js\"));\n\nconst schema = makeExecutableSchema({\n  typeDefs: mergeTypes(allTypes),\n  resolvers: mergeResolvers(allResolvers),\n  resolverValidationOptions: {\n    requireResolversForResolveType: false\n  }\n});\n\nexport default schema;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567587619043
  },
  "{\"sourceRoot\":\"/Users/choiminji/Desktop/workspace/rbs-backend/src/api/group\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/choiminji/Desktop/workspace/rbs-backend\",\"filename\":\"/Users/choiminji/Desktop/workspace/rbs-backend/src/api/group/group.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/choiminji/Desktop/workspace/rbs-backend\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/choiminji/Desktop/workspace/rbs-backend/src/api/group",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/choiminji/Desktop/workspace/rbs-backend",
      "filename": "/Users/choiminji/Desktop/workspace/rbs-backend/src/api/group/group.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/choiminji/Desktop/workspace/rbs-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/choiminji/Desktop/workspace/rbs-backend/src/api/group/group.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/choiminji/Desktop/workspace/rbs-backend/src/api/group/group.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/choiminji/Desktop/workspace/rbs-backend/src/api/group",
        "sourceFileName": "group.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _prismaClient = require(\"../../../generated/prisma-client\");\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\n_dotenv[\"default\"].config(); //.env 파일 로드\n\n\nvar resolvers = {\n  Query: {\n    groups: function () {\n      var _groups = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee() {\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _prismaClient.prisma.groups();\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function groups() {\n        return _groups.apply(this, arguments);\n      }\n\n      return groups;\n    }(),\n    group: function () {\n      var _group = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee2(_, args) {\n        var id, groups;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                id = args.id;\n                _context2.next = 3;\n                return _prismaClient.prisma.group({\n                  id: id\n                });\n\n              case 3:\n                groups = _context2.sent;\n                return _context2.abrupt(\"return\", groups);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function group(_x, _x2) {\n        return _group.apply(this, arguments);\n      }\n\n      return group;\n    }()\n  },\n  Mutation: {\n    createGroup: function () {\n      var _createGroup = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee3(_, args) {\n        var name;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                name = args.data.name;\n                _context3.next = 3;\n                return _prismaClient.prisma.createGroup({\n                  name: name\n                });\n\n              case 3:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function createGroup(_x3, _x4) {\n        return _createGroup.apply(this, arguments);\n      }\n\n      return createGroup;\n    }(),\n    createGroupParticipant: function () {\n      var _createGroupParticipant = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee4(_, args) {\n        var _args$data, groupId, userId, name;\n\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _args$data = args.data, groupId = _args$data.groupId, userId = _args$data.userId, name = _args$data.name; // console.log(\"createGroupParticipant>>\", name, groupId, userId);\n\n                _context4.next = 3;\n                return _prismaClient.prisma.createGroupParticipant({\n                  groupId: {\n                    connect: {\n                      id: groupId\n                    }\n                  },\n                  userId: {\n                    connect: {\n                      id: userId\n                    }\n                  },\n                  name: name\n                });\n\n              case 3:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function createGroupParticipant(_x5, _x6) {\n        return _createGroupParticipant.apply(this, arguments);\n      }\n\n      return createGroupParticipant;\n    }(),\n    updateGroup: function () {\n      var _updateGroup = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee6(_, args) {\n        var _args$data2, id, name, groupParticipants;\n\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _args$data2 = args.data, id = _args$data2.id, name = _args$data2.name, groupParticipants = _args$data2.groupParticipants;\n                _context6.next = 3;\n                return _prismaClient.prisma.deleteManyGroupParticipants({\n                  AND: [{\n                    groupId: {\n                      id: id\n                    }\n                  }]\n                });\n\n              case 3:\n                groupParticipants.forEach(\n                /*#__PURE__*/\n                function () {\n                  var _ref = (0, _asyncToGenerator2[\"default\"])(\n                  /*#__PURE__*/\n                  _regenerator[\"default\"].mark(function _callee5(element) {\n                    return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n                      while (1) {\n                        switch (_context5.prev = _context5.next) {\n                          case 0:\n                            _context5.next = 2;\n                            return _prismaClient.prisma.createGroupParticipant({\n                              groupId: {\n                                connect: {\n                                  id: element.groupId\n                                }\n                              },\n                              userId: {\n                                connect: {\n                                  id: element.userId\n                                }\n                              },\n                              name: element.name\n                            });\n\n                          case 2:\n                          case \"end\":\n                            return _context5.stop();\n                        }\n                      }\n                    }, _callee5);\n                  }));\n\n                  return function (_x9) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n                _context6.next = 6;\n                return _prismaClient.prisma.updateGroup({\n                  where: {\n                    id: id\n                  },\n                  data: {\n                    name: name\n                  }\n                });\n\n              case 6:\n                return _context6.abrupt(\"return\", _context6.sent);\n\n              case 7:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function updateGroup(_x7, _x8) {\n        return _updateGroup.apply(this, arguments);\n      }\n\n      return updateGroup;\n    }(),\n    deleteGroup: function () {\n      var _deleteGroup = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee7(_, args) {\n        return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return _prismaClient.prisma.deleteGroup({\n                  id: args.data.id\n                });\n\n              case 2:\n                return _context7.abrupt(\"return\", _context7.sent);\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function deleteGroup(_x10, _x11) {\n        return _deleteGroup.apply(this, arguments);\n      }\n\n      return deleteGroup;\n    }()\n  },\n  User: {\n    groupParticipants: function () {\n      var _groupParticipants = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee8(parent) {\n        return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return _prismaClient.prisma.group({\n                  id: parent.id\n                }).groupParticipants();\n\n              case 2:\n                return _context8.abrupt(\"return\", _context8.sent);\n\n              case 3:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function groupParticipants(_x12) {\n        return _groupParticipants.apply(this, arguments);\n      }\n\n      return groupParticipants;\n    }()\n  },\n  Group: {\n    groupParticipants: function () {\n      var _groupParticipants2 = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee9(parent) {\n        return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return _prismaClient.prisma.group({\n                  id: parent.id\n                }).groupParticipants();\n\n              case 2:\n                return _context9.abrupt(\"return\", _context9.sent);\n\n              case 3:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      function groupParticipants(_x13) {\n        return _groupParticipants2.apply(this, arguments);\n      }\n\n      return groupParticipants;\n    }()\n  },\n  GroupParticipant: {\n    userId: function () {\n      var _userId = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee10(parent) {\n        return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return _prismaClient.prisma.groupParticipant({\n                  id: parent.id\n                }).userId();\n\n              case 2:\n                return _context10.abrupt(\"return\", _context10.sent);\n\n              case 3:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      }));\n\n      function userId(_x14) {\n        return _userId.apply(this, arguments);\n      }\n\n      return userId;\n    }()\n  }\n};\nvar _default = resolvers;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "group.js"
      ],
      "names": [
        "dotenv",
        "config",
        "resolvers",
        "Query",
        "groups",
        "prisma",
        "group",
        "_",
        "args",
        "id",
        "Mutation",
        "createGroup",
        "name",
        "data",
        "createGroupParticipant",
        "groupId",
        "userId",
        "connect",
        "updateGroup",
        "groupParticipants",
        "deleteManyGroupParticipants",
        "AND",
        "forEach",
        "element",
        "where",
        "deleteGroup",
        "User",
        "parent",
        "Group",
        "GroupParticipant",
        "groupParticipant"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;;AACA;;AACAA,mBAAOC,MAAP,G,CAAiB;;;AAEjB,IAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM;AAAA;AAAA;AAAA,mCAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkBC,qBAAOD,MAAP,EAAlB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADD;AAELE,IAAAA,KAAK;AAAA;AAAA;AAAA,mCAAE,kBAAOC,CAAP,EAAUC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACGC,gBAAAA,EADH,GACUD,IADV,CACGC,EADH;AAAA;AAAA,uBAEcJ,qBAAOC,KAAP,CAAa;AAAEG,kBAAAA,EAAE,EAAEA;AAAN,iBAAb,CAFd;;AAAA;AAEDL,gBAAAA,MAFC;AAAA,kDAIEA,MAJF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAFA,GADS;AAUhBM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW;AAAA;AAAA;AAAA,mCAAE,kBAAOJ,CAAP,EAAUC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACHI,gBAAAA,IADG,GACMJ,IAAI,CAACK,IADX,CACHD,IADG;AAAA;AAAA,uBAEEP,qBAAOM,WAAP,CAAmB;AAAEC,kBAAAA,IAAI,EAAEA;AAAR,iBAAnB,CAFF;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADH;AAKRE,IAAAA,sBAAsB;AAAA;AAAA;AAAA,mCAAE,kBAAOP,CAAP,EAAUC,IAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,6BACYA,IAAI,CAACK,IADjB,EACdE,OADc,cACdA,OADc,EACLC,MADK,cACLA,MADK,EACGJ,IADH,cACGA,IADH,EAEtB;;AAFsB;AAAA,uBAGTP,qBAAOS,sBAAP,CAA8B;AACzCC,kBAAAA,OAAO,EAAE;AACPE,oBAAAA,OAAO,EAAE;AACPR,sBAAAA,EAAE,EAAEM;AADG;AADF,mBADgC;AAMzCC,kBAAAA,MAAM,EAAE;AACNC,oBAAAA,OAAO,EAAE;AACPR,sBAAAA,EAAE,EAAEO;AADG;AADH,mBANiC;AAWzCJ,kBAAAA,IAAI,EAAEA;AAXmC,iBAA9B,CAHS;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OALd;AAsBRM,IAAAA,WAAW;AAAA;AAAA;AAAA,mCAAE,kBAAOX,CAAP,EAAUC,IAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,8BAC6BA,IAAI,CAACK,IADlC,EACHJ,EADG,eACHA,EADG,EACCG,IADD,eACCA,IADD,EACOO,iBADP,eACOA,iBADP;AAAA;AAAA,uBAELd,qBAAOe,2BAAP,CAAmC;AACvCC,kBAAAA,GAAG,EAAE,CAAC;AAAEN,oBAAAA,OAAO,EAAE;AAAEN,sBAAAA,EAAE,EAAEA;AAAN;AAAX,mBAAD;AADkC,iBAAnC,CAFK;;AAAA;AAKXU,gBAAAA,iBAAiB,CAACG,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,+CAA0B,kBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAClBlB,qBAAOS,sBAAP,CAA8B;AAClCC,8BAAAA,OAAO,EAAE;AACPE,gCAAAA,OAAO,EAAE;AACPR,kCAAAA,EAAE,EAAEc,OAAO,CAACR;AADL;AADF,+BADyB;AAMlCC,8BAAAA,MAAM,EAAE;AACNC,gCAAAA,OAAO,EAAE;AACPR,kCAAAA,EAAE,EAAEc,OAAO,CAACP;AADL;AADH,+BAN0B;AAWlCJ,8BAAAA,IAAI,EAAEW,OAAO,CAACX;AAXoB,6BAA9B,CADkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA1B;;AAAA;AAAA;AAAA;AAAA;AALW;AAAA,uBAqBEP,qBAAOa,WAAP,CAAmB;AAC9BM,kBAAAA,KAAK,EAAE;AAAEf,oBAAAA,EAAE,EAAEA;AAAN,mBADuB;AAE9BI,kBAAAA,IAAI,EAAE;AACJD,oBAAAA,IAAI,EAAEA;AADF;AAFwB,iBAAnB,CArBF;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAtBH;AAkDRa,IAAAA,WAAW;AAAA;AAAA;AAAA,mCAAE,kBAAOlB,CAAP,EAAUC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACLH,qBAAOoB,WAAP,CAAmB;AAAEhB,kBAAAA,EAAE,EAAED,IAAI,CAACK,IAAL,CAAUJ;AAAhB,iBAAnB,CADK;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAlDH,GAVM;AA+DhBiB,EAAAA,IAAI,EAAE;AACEP,IAAAA,iBADF;AAAA;AAAA;AAAA,qDACoBQ,MADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAGWtB,qBAAOC,KAAP,CAAa;AAAEG,kBAAAA,EAAE,EAAEkB,MAAM,CAAClB;AAAb,iBAAb,EAAgCU,iBAAhC,EAHX;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GA/DU;AAqEhBS,EAAAA,KAAK,EAAE;AACCT,IAAAA,iBADD;AAAA;AAAA;AAAA,qDACmBQ,MADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAGUtB,qBAAOC,KAAP,CAAa;AAAEG,kBAAAA,EAAE,EAAEkB,MAAM,CAAClB;AAAb,iBAAb,EAAgCU,iBAAhC,EAHV;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GArES;AA2EhBU,EAAAA,gBAAgB,EAAE;AACVb,IAAAA,MADU;AAAA;AAAA;AAAA,sDACHW,MADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAGDtB,qBAAOyB,gBAAP,CAAwB;AAAErB,kBAAAA,EAAE,EAAEkB,MAAM,CAAClB;AAAb,iBAAxB,EAA2CO,MAA3C,EAHC;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA3EF,CAAlB;eAmFed,S",
      "sourceRoot": "/Users/choiminji/Desktop/workspace/rbs-backend/src/api/group",
      "sourcesContent": [
        "import { prisma } from \"../../../generated/prisma-client\";\nimport dotenv from \"dotenv\";\ndotenv.config(); //.env 파일 로드\n\nconst resolvers = {\n  Query: {\n    groups: async () => await prisma.groups(),\n    group: async (_, args) => {\n      const { id } = args;\n      let groups = await prisma.group({ id: id });\n\n      return groups;\n    }\n  },\n  Mutation: {\n    createGroup: async (_, args) => {\n      const { name } = args.data;\n      return await prisma.createGroup({ name: name });\n    },\n    createGroupParticipant: async (_, args) => {\n      const { groupId, userId, name } = args.data;\n      // console.log(\"createGroupParticipant>>\", name, groupId, userId);\n      return await prisma.createGroupParticipant({\n        groupId: {\n          connect: {\n            id: groupId\n          }\n        },\n        userId: {\n          connect: {\n            id: userId\n          }\n        },\n        name: name\n      });\n    },\n    updateGroup: async (_, args) => {\n      const { id, name, groupParticipants } = args.data;\n      await prisma.deleteManyGroupParticipants({\n        AND: [{ groupId: { id: id } }]\n      });\n      groupParticipants.forEach(async element => {\n        await prisma.createGroupParticipant({\n          groupId: {\n            connect: {\n              id: element.groupId\n            }\n          },\n          userId: {\n            connect: {\n              id: element.userId\n            }\n          },\n          name: element.name\n        });\n      });\n\n      return await prisma.updateGroup({\n        where: { id: id },\n        data: {\n          name: name\n        }\n      });\n    },\n    deleteGroup: async (_, args) =>\n      await prisma.deleteGroup({ id: args.data.id })\n  },\n  User: {\n    async groupParticipants(parent) {\n      // console.log(parent);\n      return await prisma.group({ id: parent.id }).groupParticipants();\n    }\n  },\n  Group: {\n    async groupParticipants(parent) {\n      // console.log(\"groupParticipants\", parent);\n      return await prisma.group({ id: parent.id }).groupParticipants();\n    }\n  },\n  GroupParticipant: {\n    async userId(parent) {\n      // console.log(\"GroupParticipant\", parent);\n      return await prisma.groupParticipant({ id: parent.id }).userId();\n    }\n  }\n};\n\nexport default resolvers;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1568960043098
  },
  "{\"sourceRoot\":\"/Users/choiminji/Desktop/workspace/rbs-backend/generated/prisma-client\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/choiminji/Desktop/workspace/rbs-backend\",\"filename\":\"/Users/choiminji/Desktop/workspace/rbs-backend/generated/prisma-client/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/choiminji/Desktop/workspace/rbs-backend\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/choiminji/Desktop/workspace/rbs-backend/generated/prisma-client",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/choiminji/Desktop/workspace/rbs-backend",
      "filename": "/Users/choiminji/Desktop/workspace/rbs-backend/generated/prisma-client/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/choiminji/Desktop/workspace/rbs-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/choiminji/Desktop/workspace/rbs-backend/generated/prisma-client/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/choiminji/Desktop/workspace/rbs-backend/generated/prisma-client/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/choiminji/Desktop/workspace/rbs-backend/generated/prisma-client",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar prisma_lib_1 = require(\"prisma-client-lib\");\n\nvar typeDefs = require(\"./prisma-schema\").typeDefs;\n\nvar models = [{\n  name: \"User\",\n  embedded: false\n}, {\n  name: \"Session\",\n  embedded: false\n}, {\n  name: \"Group\",\n  embedded: false\n}, {\n  name: \"GroupParticipant\",\n  embedded: false\n}];\nexports.Prisma = prisma_lib_1.makePrismaClientClass({\n  typeDefs: typeDefs,\n  models: models,\n  endpoint: \"https://rbs-a7af25ba21.herokuapp.com/rbs-backend/dev\"\n});\nexports.prisma = new exports.Prisma();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwicHJpc21hX2xpYl8xIiwicmVxdWlyZSIsInR5cGVEZWZzIiwibW9kZWxzIiwibmFtZSIsImVtYmVkZGVkIiwiUHJpc21hIiwibWFrZVByaXNtYUNsaWVudENsYXNzIiwiZW5kcG9pbnQiLCJwcmlzbWEiXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBQSxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0FBQUVDLEVBQUFBLEtBQUssRUFBRTtBQUFULENBQTdDOztBQUNBLElBQUlDLFlBQVksR0FBR0MsT0FBTyxDQUFDLG1CQUFELENBQTFCOztBQUNBLElBQUlDLFFBQVEsR0FBR0QsT0FBTyxDQUFDLGlCQUFELENBQVAsQ0FBMkJDLFFBQTFDOztBQUVBLElBQUlDLE1BQU0sR0FBRyxDQUNYO0FBQ0VDLEVBQUFBLElBQUksRUFBRSxNQURSO0FBRUVDLEVBQUFBLFFBQVEsRUFBRTtBQUZaLENBRFcsRUFLWDtBQUNFRCxFQUFBQSxJQUFJLEVBQUUsU0FEUjtBQUVFQyxFQUFBQSxRQUFRLEVBQUU7QUFGWixDQUxXLEVBU1g7QUFDRUQsRUFBQUEsSUFBSSxFQUFFLE9BRFI7QUFFRUMsRUFBQUEsUUFBUSxFQUFFO0FBRlosQ0FUVyxFQWFYO0FBQ0VELEVBQUFBLElBQUksRUFBRSxrQkFEUjtBQUVFQyxFQUFBQSxRQUFRLEVBQUU7QUFGWixDQWJXLENBQWI7QUFrQkFQLE9BQU8sQ0FBQ1EsTUFBUixHQUFpQk4sWUFBWSxDQUFDTyxxQkFBYixDQUFtQztBQUNsREwsRUFBQUEsUUFBUSxFQUFSQSxRQURrRDtBQUVsREMsRUFBQUEsTUFBTSxFQUFOQSxNQUZrRDtBQUdsREssRUFBQUEsUUFBUTtBQUgwQyxDQUFuQyxDQUFqQjtBQUtBVixPQUFPLENBQUNXLE1BQVIsR0FBaUIsSUFBSVgsT0FBTyxDQUFDUSxNQUFaLEVBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9jaG9pbWluamkvRGVza3RvcC93b3Jrc3BhY2UvcmJzLWJhY2tlbmQvZ2VuZXJhdGVkL3ByaXNtYS1jbGllbnQiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBwcmlzbWFfbGliXzEgPSByZXF1aXJlKFwicHJpc21hLWNsaWVudC1saWJcIik7XG52YXIgdHlwZURlZnMgPSByZXF1aXJlKFwiLi9wcmlzbWEtc2NoZW1hXCIpLnR5cGVEZWZzO1xuXG52YXIgbW9kZWxzID0gW1xuICB7XG4gICAgbmFtZTogXCJVc2VyXCIsXG4gICAgZW1iZWRkZWQ6IGZhbHNlXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcIlNlc3Npb25cIixcbiAgICBlbWJlZGRlZDogZmFsc2VcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiR3JvdXBcIixcbiAgICBlbWJlZGRlZDogZmFsc2VcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiR3JvdXBQYXJ0aWNpcGFudFwiLFxuICAgIGVtYmVkZGVkOiBmYWxzZVxuICB9XG5dO1xuZXhwb3J0cy5QcmlzbWEgPSBwcmlzbWFfbGliXzEubWFrZVByaXNtYUNsaWVudENsYXNzKHtcbiAgdHlwZURlZnMsXG4gIG1vZGVscyxcbiAgZW5kcG9pbnQ6IGBodHRwczovL3Jicy1hN2FmMjViYTIxLmhlcm9rdWFwcC5jb20vcmJzLWJhY2tlbmQvZGV2YFxufSk7XG5leHBvcnRzLnByaXNtYSA9IG5ldyBleHBvcnRzLlByaXNtYSgpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Object",
        "defineProperty",
        "exports",
        "value",
        "prisma_lib_1",
        "require",
        "typeDefs",
        "models",
        "name",
        "embedded",
        "Prisma",
        "makePrismaClientClass",
        "endpoint",
        "prisma"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,YAAY,GAAGC,OAAO,CAAC,mBAAD,CAA1B;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,iBAAD,CAAP,CAA2BC,QAA1C;;AAEA,IAAIC,MAAM,GAAG,CACX;AACEC,EAAAA,IAAI,EAAE,MADR;AAEEC,EAAAA,QAAQ,EAAE;AAFZ,CADW,EAKX;AACED,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,QAAQ,EAAE;AAFZ,CALW,EASX;AACED,EAAAA,IAAI,EAAE,OADR;AAEEC,EAAAA,QAAQ,EAAE;AAFZ,CATW,EAaX;AACED,EAAAA,IAAI,EAAE,kBADR;AAEEC,EAAAA,QAAQ,EAAE;AAFZ,CAbW,CAAb;AAkBAP,OAAO,CAACQ,MAAR,GAAiBN,YAAY,CAACO,qBAAb,CAAmC;AAClDL,EAAAA,QAAQ,EAARA,QADkD;AAElDC,EAAAA,MAAM,EAANA,MAFkD;AAGlDK,EAAAA,QAAQ;AAH0C,CAAnC,CAAjB;AAKAV,OAAO,CAACW,MAAR,GAAiB,IAAIX,OAAO,CAACQ,MAAZ,EAAjB",
      "sourceRoot": "/Users/choiminji/Desktop/workspace/rbs-backend/generated/prisma-client",
      "sourcesContent": [
        "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar prisma_lib_1 = require(\"prisma-client-lib\");\nvar typeDefs = require(\"./prisma-schema\").typeDefs;\n\nvar models = [\n  {\n    name: \"User\",\n    embedded: false\n  },\n  {\n    name: \"Session\",\n    embedded: false\n  },\n  {\n    name: \"Group\",\n    embedded: false\n  },\n  {\n    name: \"GroupParticipant\",\n    embedded: false\n  }\n];\nexports.Prisma = prisma_lib_1.makePrismaClientClass({\n  typeDefs,\n  models,\n  endpoint: `https://rbs-a7af25ba21.herokuapp.com/rbs-backend/dev`\n});\nexports.prisma = new exports.Prisma();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1568703134764
  },
  "{\"sourceRoot\":\"/Users/choiminji/Desktop/workspace/rbs-backend/generated/prisma-client\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/choiminji/Desktop/workspace/rbs-backend\",\"filename\":\"/Users/choiminji/Desktop/workspace/rbs-backend/generated/prisma-client/prisma-schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/choiminji/Desktop/workspace/rbs-backend\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/choiminji/Desktop/workspace/rbs-backend/generated/prisma-client",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/choiminji/Desktop/workspace/rbs-backend",
      "filename": "/Users/choiminji/Desktop/workspace/rbs-backend/generated/prisma-client/prisma-schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/choiminji/Desktop/workspace/rbs-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/choiminji/Desktop/workspace/rbs-backend/generated/prisma-client/prisma-schema.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/choiminji/Desktop/workspace/rbs-backend/generated/prisma-client/prisma-schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/choiminji/Desktop/workspace/rbs-backend/generated/prisma-client",
        "sourceFileName": "prisma-schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = {\n  typeDefs: // Code generated by Prisma (prisma@1.34.5). DO NOT EDIT.\n  // Please don't change this file manually but run `prisma generate` to update it.\n  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/\n\n  /* GraphQL */\n  \"type AggregateGroup {\\n  count: Int!\\n}\\n\\ntype AggregateGroupParticipant {\\n  count: Int!\\n}\\n\\ntype AggregateSession {\\n  count: Int!\\n}\\n\\ntype AggregateUser {\\n  count: Int!\\n}\\n\\ntype BatchPayload {\\n  count: Long!\\n}\\n\\ntype Group {\\n  id: ID!\\n  name: String!\\n  groupParticipants(where: GroupParticipantWhereInput, orderBy: GroupParticipantOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GroupParticipant!]\\n}\\n\\ntype GroupConnection {\\n  pageInfo: PageInfo!\\n  edges: [GroupEdge]!\\n  aggregate: AggregateGroup!\\n}\\n\\ninput GroupCreateInput {\\n  id: ID\\n  name: String!\\n  groupParticipants: GroupParticipantCreateManyWithoutGroupIdInput\\n}\\n\\ninput GroupCreateOneWithoutGroupParticipantsInput {\\n  create: GroupCreateWithoutGroupParticipantsInput\\n  connect: GroupWhereUniqueInput\\n}\\n\\ninput GroupCreateWithoutGroupParticipantsInput {\\n  id: ID\\n  name: String!\\n}\\n\\ntype GroupEdge {\\n  node: Group!\\n  cursor: String!\\n}\\n\\nenum GroupOrderByInput {\\n  id_ASC\\n  id_DESC\\n  name_ASC\\n  name_DESC\\n}\\n\\ntype GroupParticipant {\\n  id: ID!\\n  groupId: Group\\n  userId: User\\n  name: String!\\n}\\n\\ntype GroupParticipantConnection {\\n  pageInfo: PageInfo!\\n  edges: [GroupParticipantEdge]!\\n  aggregate: AggregateGroupParticipant!\\n}\\n\\ninput GroupParticipantCreateInput {\\n  id: ID\\n  groupId: GroupCreateOneWithoutGroupParticipantsInput\\n  userId: UserCreateOneWithoutGroupsInput\\n  name: String!\\n}\\n\\ninput GroupParticipantCreateManyWithoutGroupIdInput {\\n  create: [GroupParticipantCreateWithoutGroupIdInput!]\\n  connect: [GroupParticipantWhereUniqueInput!]\\n}\\n\\ninput GroupParticipantCreateManyWithoutUserIdInput {\\n  create: [GroupParticipantCreateWithoutUserIdInput!]\\n  connect: [GroupParticipantWhereUniqueInput!]\\n}\\n\\ninput GroupParticipantCreateWithoutGroupIdInput {\\n  id: ID\\n  userId: UserCreateOneWithoutGroupsInput\\n  name: String!\\n}\\n\\ninput GroupParticipantCreateWithoutUserIdInput {\\n  id: ID\\n  groupId: GroupCreateOneWithoutGroupParticipantsInput\\n  name: String!\\n}\\n\\ntype GroupParticipantEdge {\\n  node: GroupParticipant!\\n  cursor: String!\\n}\\n\\nenum GroupParticipantOrderByInput {\\n  id_ASC\\n  id_DESC\\n  name_ASC\\n  name_DESC\\n}\\n\\ntype GroupParticipantPreviousValues {\\n  id: ID!\\n  name: String!\\n}\\n\\ninput GroupParticipantScalarWhereInput {\\n  id: ID\\n  id_not: ID\\n  id_in: [ID!]\\n  id_not_in: [ID!]\\n  id_lt: ID\\n  id_lte: ID\\n  id_gt: ID\\n  id_gte: ID\\n  id_contains: ID\\n  id_not_contains: ID\\n  id_starts_with: ID\\n  id_not_starts_with: ID\\n  id_ends_with: ID\\n  id_not_ends_with: ID\\n  name: String\\n  name_not: String\\n  name_in: [String!]\\n  name_not_in: [String!]\\n  name_lt: String\\n  name_lte: String\\n  name_gt: String\\n  name_gte: String\\n  name_contains: String\\n  name_not_contains: String\\n  name_starts_with: String\\n  name_not_starts_with: String\\n  name_ends_with: String\\n  name_not_ends_with: String\\n  AND: [GroupParticipantScalarWhereInput!]\\n  OR: [GroupParticipantScalarWhereInput!]\\n  NOT: [GroupParticipantScalarWhereInput!]\\n}\\n\\ntype GroupParticipantSubscriptionPayload {\\n  mutation: MutationType!\\n  node: GroupParticipant\\n  updatedFields: [String!]\\n  previousValues: GroupParticipantPreviousValues\\n}\\n\\ninput GroupParticipantSubscriptionWhereInput {\\n  mutation_in: [MutationType!]\\n  updatedFields_contains: String\\n  updatedFields_contains_every: [String!]\\n  updatedFields_contains_some: [String!]\\n  node: GroupParticipantWhereInput\\n  AND: [GroupParticipantSubscriptionWhereInput!]\\n  OR: [GroupParticipantSubscriptionWhereInput!]\\n  NOT: [GroupParticipantSubscriptionWhereInput!]\\n}\\n\\ninput GroupParticipantUpdateInput {\\n  groupId: GroupUpdateOneWithoutGroupParticipantsInput\\n  userId: UserUpdateOneWithoutGroupsInput\\n  name: String\\n}\\n\\ninput GroupParticipantUpdateManyDataInput {\\n  name: String\\n}\\n\\ninput GroupParticipantUpdateManyMutationInput {\\n  name: String\\n}\\n\\ninput GroupParticipantUpdateManyWithoutGroupIdInput {\\n  create: [GroupParticipantCreateWithoutGroupIdInput!]\\n  delete: [GroupParticipantWhereUniqueInput!]\\n  connect: [GroupParticipantWhereUniqueInput!]\\n  set: [GroupParticipantWhereUniqueInput!]\\n  disconnect: [GroupParticipantWhereUniqueInput!]\\n  update: [GroupParticipantUpdateWithWhereUniqueWithoutGroupIdInput!]\\n  upsert: [GroupParticipantUpsertWithWhereUniqueWithoutGroupIdInput!]\\n  deleteMany: [GroupParticipantScalarWhereInput!]\\n  updateMany: [GroupParticipantUpdateManyWithWhereNestedInput!]\\n}\\n\\ninput GroupParticipantUpdateManyWithoutUserIdInput {\\n  create: [GroupParticipantCreateWithoutUserIdInput!]\\n  delete: [GroupParticipantWhereUniqueInput!]\\n  connect: [GroupParticipantWhereUniqueInput!]\\n  set: [GroupParticipantWhereUniqueInput!]\\n  disconnect: [GroupParticipantWhereUniqueInput!]\\n  update: [GroupParticipantUpdateWithWhereUniqueWithoutUserIdInput!]\\n  upsert: [GroupParticipantUpsertWithWhereUniqueWithoutUserIdInput!]\\n  deleteMany: [GroupParticipantScalarWhereInput!]\\n  updateMany: [GroupParticipantUpdateManyWithWhereNestedInput!]\\n}\\n\\ninput GroupParticipantUpdateManyWithWhereNestedInput {\\n  where: GroupParticipantScalarWhereInput!\\n  data: GroupParticipantUpdateManyDataInput!\\n}\\n\\ninput GroupParticipantUpdateWithoutGroupIdDataInput {\\n  userId: UserUpdateOneWithoutGroupsInput\\n  name: String\\n}\\n\\ninput GroupParticipantUpdateWithoutUserIdDataInput {\\n  groupId: GroupUpdateOneWithoutGroupParticipantsInput\\n  name: String\\n}\\n\\ninput GroupParticipantUpdateWithWhereUniqueWithoutGroupIdInput {\\n  where: GroupParticipantWhereUniqueInput!\\n  data: GroupParticipantUpdateWithoutGroupIdDataInput!\\n}\\n\\ninput GroupParticipantUpdateWithWhereUniqueWithoutUserIdInput {\\n  where: GroupParticipantWhereUniqueInput!\\n  data: GroupParticipantUpdateWithoutUserIdDataInput!\\n}\\n\\ninput GroupParticipantUpsertWithWhereUniqueWithoutGroupIdInput {\\n  where: GroupParticipantWhereUniqueInput!\\n  update: GroupParticipantUpdateWithoutGroupIdDataInput!\\n  create: GroupParticipantCreateWithoutGroupIdInput!\\n}\\n\\ninput GroupParticipantUpsertWithWhereUniqueWithoutUserIdInput {\\n  where: GroupParticipantWhereUniqueInput!\\n  update: GroupParticipantUpdateWithoutUserIdDataInput!\\n  create: GroupParticipantCreateWithoutUserIdInput!\\n}\\n\\ninput GroupParticipantWhereInput {\\n  id: ID\\n  id_not: ID\\n  id_in: [ID!]\\n  id_not_in: [ID!]\\n  id_lt: ID\\n  id_lte: ID\\n  id_gt: ID\\n  id_gte: ID\\n  id_contains: ID\\n  id_not_contains: ID\\n  id_starts_with: ID\\n  id_not_starts_with: ID\\n  id_ends_with: ID\\n  id_not_ends_with: ID\\n  groupId: GroupWhereInput\\n  userId: UserWhereInput\\n  name: String\\n  name_not: String\\n  name_in: [String!]\\n  name_not_in: [String!]\\n  name_lt: String\\n  name_lte: String\\n  name_gt: String\\n  name_gte: String\\n  name_contains: String\\n  name_not_contains: String\\n  name_starts_with: String\\n  name_not_starts_with: String\\n  name_ends_with: String\\n  name_not_ends_with: String\\n  AND: [GroupParticipantWhereInput!]\\n  OR: [GroupParticipantWhereInput!]\\n  NOT: [GroupParticipantWhereInput!]\\n}\\n\\ninput GroupParticipantWhereUniqueInput {\\n  id: ID\\n}\\n\\ntype GroupPreviousValues {\\n  id: ID!\\n  name: String!\\n}\\n\\ntype GroupSubscriptionPayload {\\n  mutation: MutationType!\\n  node: Group\\n  updatedFields: [String!]\\n  previousValues: GroupPreviousValues\\n}\\n\\ninput GroupSubscriptionWhereInput {\\n  mutation_in: [MutationType!]\\n  updatedFields_contains: String\\n  updatedFields_contains_every: [String!]\\n  updatedFields_contains_some: [String!]\\n  node: GroupWhereInput\\n  AND: [GroupSubscriptionWhereInput!]\\n  OR: [GroupSubscriptionWhereInput!]\\n  NOT: [GroupSubscriptionWhereInput!]\\n}\\n\\ninput GroupUpdateInput {\\n  name: String\\n  groupParticipants: GroupParticipantUpdateManyWithoutGroupIdInput\\n}\\n\\ninput GroupUpdateManyMutationInput {\\n  name: String\\n}\\n\\ninput GroupUpdateOneWithoutGroupParticipantsInput {\\n  create: GroupCreateWithoutGroupParticipantsInput\\n  update: GroupUpdateWithoutGroupParticipantsDataInput\\n  upsert: GroupUpsertWithoutGroupParticipantsInput\\n  delete: Boolean\\n  disconnect: Boolean\\n  connect: GroupWhereUniqueInput\\n}\\n\\ninput GroupUpdateWithoutGroupParticipantsDataInput {\\n  name: String\\n}\\n\\ninput GroupUpsertWithoutGroupParticipantsInput {\\n  update: GroupUpdateWithoutGroupParticipantsDataInput!\\n  create: GroupCreateWithoutGroupParticipantsInput!\\n}\\n\\ninput GroupWhereInput {\\n  id: ID\\n  id_not: ID\\n  id_in: [ID!]\\n  id_not_in: [ID!]\\n  id_lt: ID\\n  id_lte: ID\\n  id_gt: ID\\n  id_gte: ID\\n  id_contains: ID\\n  id_not_contains: ID\\n  id_starts_with: ID\\n  id_not_starts_with: ID\\n  id_ends_with: ID\\n  id_not_ends_with: ID\\n  name: String\\n  name_not: String\\n  name_in: [String!]\\n  name_not_in: [String!]\\n  name_lt: String\\n  name_lte: String\\n  name_gt: String\\n  name_gte: String\\n  name_contains: String\\n  name_not_contains: String\\n  name_starts_with: String\\n  name_not_starts_with: String\\n  name_ends_with: String\\n  name_not_ends_with: String\\n  groupParticipants_every: GroupParticipantWhereInput\\n  groupParticipants_some: GroupParticipantWhereInput\\n  groupParticipants_none: GroupParticipantWhereInput\\n  AND: [GroupWhereInput!]\\n  OR: [GroupWhereInput!]\\n  NOT: [GroupWhereInput!]\\n}\\n\\ninput GroupWhereUniqueInput {\\n  id: ID\\n}\\n\\nscalar Long\\n\\ntype Mutation {\\n  createGroup(data: GroupCreateInput!): Group!\\n  updateGroup(data: GroupUpdateInput!, where: GroupWhereUniqueInput!): Group\\n  updateManyGroups(data: GroupUpdateManyMutationInput!, where: GroupWhereInput): BatchPayload!\\n  upsertGroup(where: GroupWhereUniqueInput!, create: GroupCreateInput!, update: GroupUpdateInput!): Group!\\n  deleteGroup(where: GroupWhereUniqueInput!): Group\\n  deleteManyGroups(where: GroupWhereInput): BatchPayload!\\n  createGroupParticipant(data: GroupParticipantCreateInput!): GroupParticipant!\\n  updateGroupParticipant(data: GroupParticipantUpdateInput!, where: GroupParticipantWhereUniqueInput!): GroupParticipant\\n  updateManyGroupParticipants(data: GroupParticipantUpdateManyMutationInput!, where: GroupParticipantWhereInput): BatchPayload!\\n  upsertGroupParticipant(where: GroupParticipantWhereUniqueInput!, create: GroupParticipantCreateInput!, update: GroupParticipantUpdateInput!): GroupParticipant!\\n  deleteGroupParticipant(where: GroupParticipantWhereUniqueInput!): GroupParticipant\\n  deleteManyGroupParticipants(where: GroupParticipantWhereInput): BatchPayload!\\n  createSession(data: SessionCreateInput!): Session!\\n  updateSession(data: SessionUpdateInput!, where: SessionWhereUniqueInput!): Session\\n  updateManySessions(data: SessionUpdateManyMutationInput!, where: SessionWhereInput): BatchPayload!\\n  upsertSession(where: SessionWhereUniqueInput!, create: SessionCreateInput!, update: SessionUpdateInput!): Session!\\n  deleteSession(where: SessionWhereUniqueInput!): Session\\n  deleteManySessions(where: SessionWhereInput): BatchPayload!\\n  createUser(data: UserCreateInput!): User!\\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\\n  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!\\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\\n  deleteUser(where: UserWhereUniqueInput!): User\\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\\n}\\n\\nenum MutationType {\\n  CREATED\\n  UPDATED\\n  DELETED\\n}\\n\\ninterface Node {\\n  id: ID!\\n}\\n\\ntype PageInfo {\\n  hasNextPage: Boolean!\\n  hasPreviousPage: Boolean!\\n  startCursor: String\\n  endCursor: String\\n}\\n\\ntype Query {\\n  group(where: GroupWhereUniqueInput!): Group\\n  groups(where: GroupWhereInput, orderBy: GroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Group]!\\n  groupsConnection(where: GroupWhereInput, orderBy: GroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GroupConnection!\\n  groupParticipant(where: GroupParticipantWhereUniqueInput!): GroupParticipant\\n  groupParticipants(where: GroupParticipantWhereInput, orderBy: GroupParticipantOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GroupParticipant]!\\n  groupParticipantsConnection(where: GroupParticipantWhereInput, orderBy: GroupParticipantOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GroupParticipantConnection!\\n  session(where: SessionWhereUniqueInput!): Session\\n  sessions(where: SessionWhereInput, orderBy: SessionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Session]!\\n  sessionsConnection(where: SessionWhereInput, orderBy: SessionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SessionConnection!\\n  user(where: UserWhereUniqueInput!): User\\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\\n  node(id: ID!): Node\\n}\\n\\ntype Session {\\n  id: ID!\\n  email: String!\\n  token: String!\\n}\\n\\ntype SessionConnection {\\n  pageInfo: PageInfo!\\n  edges: [SessionEdge]!\\n  aggregate: AggregateSession!\\n}\\n\\ninput SessionCreateInput {\\n  id: ID\\n  email: String!\\n  token: String!\\n}\\n\\ntype SessionEdge {\\n  node: Session!\\n  cursor: String!\\n}\\n\\nenum SessionOrderByInput {\\n  id_ASC\\n  id_DESC\\n  email_ASC\\n  email_DESC\\n  token_ASC\\n  token_DESC\\n}\\n\\ntype SessionPreviousValues {\\n  id: ID!\\n  email: String!\\n  token: String!\\n}\\n\\ntype SessionSubscriptionPayload {\\n  mutation: MutationType!\\n  node: Session\\n  updatedFields: [String!]\\n  previousValues: SessionPreviousValues\\n}\\n\\ninput SessionSubscriptionWhereInput {\\n  mutation_in: [MutationType!]\\n  updatedFields_contains: String\\n  updatedFields_contains_every: [String!]\\n  updatedFields_contains_some: [String!]\\n  node: SessionWhereInput\\n  AND: [SessionSubscriptionWhereInput!]\\n  OR: [SessionSubscriptionWhereInput!]\\n  NOT: [SessionSubscriptionWhereInput!]\\n}\\n\\ninput SessionUpdateInput {\\n  email: String\\n  token: String\\n}\\n\\ninput SessionUpdateManyMutationInput {\\n  email: String\\n  token: String\\n}\\n\\ninput SessionWhereInput {\\n  id: ID\\n  id_not: ID\\n  id_in: [ID!]\\n  id_not_in: [ID!]\\n  id_lt: ID\\n  id_lte: ID\\n  id_gt: ID\\n  id_gte: ID\\n  id_contains: ID\\n  id_not_contains: ID\\n  id_starts_with: ID\\n  id_not_starts_with: ID\\n  id_ends_with: ID\\n  id_not_ends_with: ID\\n  email: String\\n  email_not: String\\n  email_in: [String!]\\n  email_not_in: [String!]\\n  email_lt: String\\n  email_lte: String\\n  email_gt: String\\n  email_gte: String\\n  email_contains: String\\n  email_not_contains: String\\n  email_starts_with: String\\n  email_not_starts_with: String\\n  email_ends_with: String\\n  email_not_ends_with: String\\n  token: String\\n  token_not: String\\n  token_in: [String!]\\n  token_not_in: [String!]\\n  token_lt: String\\n  token_lte: String\\n  token_gt: String\\n  token_gte: String\\n  token_contains: String\\n  token_not_contains: String\\n  token_starts_with: String\\n  token_not_starts_with: String\\n  token_ends_with: String\\n  token_not_ends_with: String\\n  AND: [SessionWhereInput!]\\n  OR: [SessionWhereInput!]\\n  NOT: [SessionWhereInput!]\\n}\\n\\ninput SessionWhereUniqueInput {\\n  id: ID\\n  email: String\\n  token: String\\n}\\n\\ntype Subscription {\\n  group(where: GroupSubscriptionWhereInput): GroupSubscriptionPayload\\n  groupParticipant(where: GroupParticipantSubscriptionWhereInput): GroupParticipantSubscriptionPayload\\n  session(where: SessionSubscriptionWhereInput): SessionSubscriptionPayload\\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\\n}\\n\\ntype User {\\n  id: ID!\\n  email: String!\\n  name: String!\\n  password: String!\\n  groups(where: GroupParticipantWhereInput, orderBy: GroupParticipantOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GroupParticipant!]\\n}\\n\\ntype UserConnection {\\n  pageInfo: PageInfo!\\n  edges: [UserEdge]!\\n  aggregate: AggregateUser!\\n}\\n\\ninput UserCreateInput {\\n  id: ID\\n  email: String!\\n  name: String!\\n  password: String!\\n  groups: GroupParticipantCreateManyWithoutUserIdInput\\n}\\n\\ninput UserCreateOneWithoutGroupsInput {\\n  create: UserCreateWithoutGroupsInput\\n  connect: UserWhereUniqueInput\\n}\\n\\ninput UserCreateWithoutGroupsInput {\\n  id: ID\\n  email: String!\\n  name: String!\\n  password: String!\\n}\\n\\ntype UserEdge {\\n  node: User!\\n  cursor: String!\\n}\\n\\nenum UserOrderByInput {\\n  id_ASC\\n  id_DESC\\n  email_ASC\\n  email_DESC\\n  name_ASC\\n  name_DESC\\n  password_ASC\\n  password_DESC\\n}\\n\\ntype UserPreviousValues {\\n  id: ID!\\n  email: String!\\n  name: String!\\n  password: String!\\n}\\n\\ntype UserSubscriptionPayload {\\n  mutation: MutationType!\\n  node: User\\n  updatedFields: [String!]\\n  previousValues: UserPreviousValues\\n}\\n\\ninput UserSubscriptionWhereInput {\\n  mutation_in: [MutationType!]\\n  updatedFields_contains: String\\n  updatedFields_contains_every: [String!]\\n  updatedFields_contains_some: [String!]\\n  node: UserWhereInput\\n  AND: [UserSubscriptionWhereInput!]\\n  OR: [UserSubscriptionWhereInput!]\\n  NOT: [UserSubscriptionWhereInput!]\\n}\\n\\ninput UserUpdateInput {\\n  email: String\\n  name: String\\n  password: String\\n  groups: GroupParticipantUpdateManyWithoutUserIdInput\\n}\\n\\ninput UserUpdateManyMutationInput {\\n  email: String\\n  name: String\\n  password: String\\n}\\n\\ninput UserUpdateOneWithoutGroupsInput {\\n  create: UserCreateWithoutGroupsInput\\n  update: UserUpdateWithoutGroupsDataInput\\n  upsert: UserUpsertWithoutGroupsInput\\n  delete: Boolean\\n  disconnect: Boolean\\n  connect: UserWhereUniqueInput\\n}\\n\\ninput UserUpdateWithoutGroupsDataInput {\\n  email: String\\n  name: String\\n  password: String\\n}\\n\\ninput UserUpsertWithoutGroupsInput {\\n  update: UserUpdateWithoutGroupsDataInput!\\n  create: UserCreateWithoutGroupsInput!\\n}\\n\\ninput UserWhereInput {\\n  id: ID\\n  id_not: ID\\n  id_in: [ID!]\\n  id_not_in: [ID!]\\n  id_lt: ID\\n  id_lte: ID\\n  id_gt: ID\\n  id_gte: ID\\n  id_contains: ID\\n  id_not_contains: ID\\n  id_starts_with: ID\\n  id_not_starts_with: ID\\n  id_ends_with: ID\\n  id_not_ends_with: ID\\n  email: String\\n  email_not: String\\n  email_in: [String!]\\n  email_not_in: [String!]\\n  email_lt: String\\n  email_lte: String\\n  email_gt: String\\n  email_gte: String\\n  email_contains: String\\n  email_not_contains: String\\n  email_starts_with: String\\n  email_not_starts_with: String\\n  email_ends_with: String\\n  email_not_ends_with: String\\n  name: String\\n  name_not: String\\n  name_in: [String!]\\n  name_not_in: [String!]\\n  name_lt: String\\n  name_lte: String\\n  name_gt: String\\n  name_gte: String\\n  name_contains: String\\n  name_not_contains: String\\n  name_starts_with: String\\n  name_not_starts_with: String\\n  name_ends_with: String\\n  name_not_ends_with: String\\n  password: String\\n  password_not: String\\n  password_in: [String!]\\n  password_not_in: [String!]\\n  password_lt: String\\n  password_lte: String\\n  password_gt: String\\n  password_gte: String\\n  password_contains: String\\n  password_not_contains: String\\n  password_starts_with: String\\n  password_not_starts_with: String\\n  password_ends_with: String\\n  password_not_ends_with: String\\n  groups_every: GroupParticipantWhereInput\\n  groups_some: GroupParticipantWhereInput\\n  groups_none: GroupParticipantWhereInput\\n  AND: [UserWhereInput!]\\n  OR: [UserWhereInput!]\\n  NOT: [UserWhereInput!]\\n}\\n\\ninput UserWhereUniqueInput {\\n  id: ID\\n  email: String\\n}\\n\"\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "prisma-schema.js"
      ],
      "names": [
        "module",
        "exports",
        "typeDefs"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB;AACTC,EAAAA,QAAQ,EAAE;AAChB;AACA;;AAEF;AAJgB;AADC,CAAjB",
      "sourceRoot": "/Users/choiminji/Desktop/workspace/rbs-backend/generated/prisma-client",
      "sourcesContent": [
        "module.exports = {\n        typeDefs: // Code generated by Prisma (prisma@1.34.5). DO NOT EDIT.\n  // Please don't change this file manually but run `prisma generate` to update it.\n  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/\n\n/* GraphQL */ `type AggregateGroup {\n  count: Int!\n}\n\ntype AggregateGroupParticipant {\n  count: Int!\n}\n\ntype AggregateSession {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  count: Long!\n}\n\ntype Group {\n  id: ID!\n  name: String!\n  groupParticipants(where: GroupParticipantWhereInput, orderBy: GroupParticipantOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GroupParticipant!]\n}\n\ntype GroupConnection {\n  pageInfo: PageInfo!\n  edges: [GroupEdge]!\n  aggregate: AggregateGroup!\n}\n\ninput GroupCreateInput {\n  id: ID\n  name: String!\n  groupParticipants: GroupParticipantCreateManyWithoutGroupIdInput\n}\n\ninput GroupCreateOneWithoutGroupParticipantsInput {\n  create: GroupCreateWithoutGroupParticipantsInput\n  connect: GroupWhereUniqueInput\n}\n\ninput GroupCreateWithoutGroupParticipantsInput {\n  id: ID\n  name: String!\n}\n\ntype GroupEdge {\n  node: Group!\n  cursor: String!\n}\n\nenum GroupOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n}\n\ntype GroupParticipant {\n  id: ID!\n  groupId: Group\n  userId: User\n  name: String!\n}\n\ntype GroupParticipantConnection {\n  pageInfo: PageInfo!\n  edges: [GroupParticipantEdge]!\n  aggregate: AggregateGroupParticipant!\n}\n\ninput GroupParticipantCreateInput {\n  id: ID\n  groupId: GroupCreateOneWithoutGroupParticipantsInput\n  userId: UserCreateOneWithoutGroupsInput\n  name: String!\n}\n\ninput GroupParticipantCreateManyWithoutGroupIdInput {\n  create: [GroupParticipantCreateWithoutGroupIdInput!]\n  connect: [GroupParticipantWhereUniqueInput!]\n}\n\ninput GroupParticipantCreateManyWithoutUserIdInput {\n  create: [GroupParticipantCreateWithoutUserIdInput!]\n  connect: [GroupParticipantWhereUniqueInput!]\n}\n\ninput GroupParticipantCreateWithoutGroupIdInput {\n  id: ID\n  userId: UserCreateOneWithoutGroupsInput\n  name: String!\n}\n\ninput GroupParticipantCreateWithoutUserIdInput {\n  id: ID\n  groupId: GroupCreateOneWithoutGroupParticipantsInput\n  name: String!\n}\n\ntype GroupParticipantEdge {\n  node: GroupParticipant!\n  cursor: String!\n}\n\nenum GroupParticipantOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n}\n\ntype GroupParticipantPreviousValues {\n  id: ID!\n  name: String!\n}\n\ninput GroupParticipantScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  AND: [GroupParticipantScalarWhereInput!]\n  OR: [GroupParticipantScalarWhereInput!]\n  NOT: [GroupParticipantScalarWhereInput!]\n}\n\ntype GroupParticipantSubscriptionPayload {\n  mutation: MutationType!\n  node: GroupParticipant\n  updatedFields: [String!]\n  previousValues: GroupParticipantPreviousValues\n}\n\ninput GroupParticipantSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: GroupParticipantWhereInput\n  AND: [GroupParticipantSubscriptionWhereInput!]\n  OR: [GroupParticipantSubscriptionWhereInput!]\n  NOT: [GroupParticipantSubscriptionWhereInput!]\n}\n\ninput GroupParticipantUpdateInput {\n  groupId: GroupUpdateOneWithoutGroupParticipantsInput\n  userId: UserUpdateOneWithoutGroupsInput\n  name: String\n}\n\ninput GroupParticipantUpdateManyDataInput {\n  name: String\n}\n\ninput GroupParticipantUpdateManyMutationInput {\n  name: String\n}\n\ninput GroupParticipantUpdateManyWithoutGroupIdInput {\n  create: [GroupParticipantCreateWithoutGroupIdInput!]\n  delete: [GroupParticipantWhereUniqueInput!]\n  connect: [GroupParticipantWhereUniqueInput!]\n  set: [GroupParticipantWhereUniqueInput!]\n  disconnect: [GroupParticipantWhereUniqueInput!]\n  update: [GroupParticipantUpdateWithWhereUniqueWithoutGroupIdInput!]\n  upsert: [GroupParticipantUpsertWithWhereUniqueWithoutGroupIdInput!]\n  deleteMany: [GroupParticipantScalarWhereInput!]\n  updateMany: [GroupParticipantUpdateManyWithWhereNestedInput!]\n}\n\ninput GroupParticipantUpdateManyWithoutUserIdInput {\n  create: [GroupParticipantCreateWithoutUserIdInput!]\n  delete: [GroupParticipantWhereUniqueInput!]\n  connect: [GroupParticipantWhereUniqueInput!]\n  set: [GroupParticipantWhereUniqueInput!]\n  disconnect: [GroupParticipantWhereUniqueInput!]\n  update: [GroupParticipantUpdateWithWhereUniqueWithoutUserIdInput!]\n  upsert: [GroupParticipantUpsertWithWhereUniqueWithoutUserIdInput!]\n  deleteMany: [GroupParticipantScalarWhereInput!]\n  updateMany: [GroupParticipantUpdateManyWithWhereNestedInput!]\n}\n\ninput GroupParticipantUpdateManyWithWhereNestedInput {\n  where: GroupParticipantScalarWhereInput!\n  data: GroupParticipantUpdateManyDataInput!\n}\n\ninput GroupParticipantUpdateWithoutGroupIdDataInput {\n  userId: UserUpdateOneWithoutGroupsInput\n  name: String\n}\n\ninput GroupParticipantUpdateWithoutUserIdDataInput {\n  groupId: GroupUpdateOneWithoutGroupParticipantsInput\n  name: String\n}\n\ninput GroupParticipantUpdateWithWhereUniqueWithoutGroupIdInput {\n  where: GroupParticipantWhereUniqueInput!\n  data: GroupParticipantUpdateWithoutGroupIdDataInput!\n}\n\ninput GroupParticipantUpdateWithWhereUniqueWithoutUserIdInput {\n  where: GroupParticipantWhereUniqueInput!\n  data: GroupParticipantUpdateWithoutUserIdDataInput!\n}\n\ninput GroupParticipantUpsertWithWhereUniqueWithoutGroupIdInput {\n  where: GroupParticipantWhereUniqueInput!\n  update: GroupParticipantUpdateWithoutGroupIdDataInput!\n  create: GroupParticipantCreateWithoutGroupIdInput!\n}\n\ninput GroupParticipantUpsertWithWhereUniqueWithoutUserIdInput {\n  where: GroupParticipantWhereUniqueInput!\n  update: GroupParticipantUpdateWithoutUserIdDataInput!\n  create: GroupParticipantCreateWithoutUserIdInput!\n}\n\ninput GroupParticipantWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  groupId: GroupWhereInput\n  userId: UserWhereInput\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  AND: [GroupParticipantWhereInput!]\n  OR: [GroupParticipantWhereInput!]\n  NOT: [GroupParticipantWhereInput!]\n}\n\ninput GroupParticipantWhereUniqueInput {\n  id: ID\n}\n\ntype GroupPreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype GroupSubscriptionPayload {\n  mutation: MutationType!\n  node: Group\n  updatedFields: [String!]\n  previousValues: GroupPreviousValues\n}\n\ninput GroupSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: GroupWhereInput\n  AND: [GroupSubscriptionWhereInput!]\n  OR: [GroupSubscriptionWhereInput!]\n  NOT: [GroupSubscriptionWhereInput!]\n}\n\ninput GroupUpdateInput {\n  name: String\n  groupParticipants: GroupParticipantUpdateManyWithoutGroupIdInput\n}\n\ninput GroupUpdateManyMutationInput {\n  name: String\n}\n\ninput GroupUpdateOneWithoutGroupParticipantsInput {\n  create: GroupCreateWithoutGroupParticipantsInput\n  update: GroupUpdateWithoutGroupParticipantsDataInput\n  upsert: GroupUpsertWithoutGroupParticipantsInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: GroupWhereUniqueInput\n}\n\ninput GroupUpdateWithoutGroupParticipantsDataInput {\n  name: String\n}\n\ninput GroupUpsertWithoutGroupParticipantsInput {\n  update: GroupUpdateWithoutGroupParticipantsDataInput!\n  create: GroupCreateWithoutGroupParticipantsInput!\n}\n\ninput GroupWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  groupParticipants_every: GroupParticipantWhereInput\n  groupParticipants_some: GroupParticipantWhereInput\n  groupParticipants_none: GroupParticipantWhereInput\n  AND: [GroupWhereInput!]\n  OR: [GroupWhereInput!]\n  NOT: [GroupWhereInput!]\n}\n\ninput GroupWhereUniqueInput {\n  id: ID\n}\n\nscalar Long\n\ntype Mutation {\n  createGroup(data: GroupCreateInput!): Group!\n  updateGroup(data: GroupUpdateInput!, where: GroupWhereUniqueInput!): Group\n  updateManyGroups(data: GroupUpdateManyMutationInput!, where: GroupWhereInput): BatchPayload!\n  upsertGroup(where: GroupWhereUniqueInput!, create: GroupCreateInput!, update: GroupUpdateInput!): Group!\n  deleteGroup(where: GroupWhereUniqueInput!): Group\n  deleteManyGroups(where: GroupWhereInput): BatchPayload!\n  createGroupParticipant(data: GroupParticipantCreateInput!): GroupParticipant!\n  updateGroupParticipant(data: GroupParticipantUpdateInput!, where: GroupParticipantWhereUniqueInput!): GroupParticipant\n  updateManyGroupParticipants(data: GroupParticipantUpdateManyMutationInput!, where: GroupParticipantWhereInput): BatchPayload!\n  upsertGroupParticipant(where: GroupParticipantWhereUniqueInput!, create: GroupParticipantCreateInput!, update: GroupParticipantUpdateInput!): GroupParticipant!\n  deleteGroupParticipant(where: GroupParticipantWhereUniqueInput!): GroupParticipant\n  deleteManyGroupParticipants(where: GroupParticipantWhereInput): BatchPayload!\n  createSession(data: SessionCreateInput!): Session!\n  updateSession(data: SessionUpdateInput!, where: SessionWhereUniqueInput!): Session\n  updateManySessions(data: SessionUpdateManyMutationInput!, where: SessionWhereInput): BatchPayload!\n  upsertSession(where: SessionWhereUniqueInput!, create: SessionCreateInput!, update: SessionUpdateInput!): Session!\n  deleteSession(where: SessionWhereUniqueInput!): Session\n  deleteManySessions(where: SessionWhereInput): BatchPayload!\n  createUser(data: UserCreateInput!): User!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  deleteUser(where: UserWhereUniqueInput!): User\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype Query {\n  group(where: GroupWhereUniqueInput!): Group\n  groups(where: GroupWhereInput, orderBy: GroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Group]!\n  groupsConnection(where: GroupWhereInput, orderBy: GroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GroupConnection!\n  groupParticipant(where: GroupParticipantWhereUniqueInput!): GroupParticipant\n  groupParticipants(where: GroupParticipantWhereInput, orderBy: GroupParticipantOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GroupParticipant]!\n  groupParticipantsConnection(where: GroupParticipantWhereInput, orderBy: GroupParticipantOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GroupParticipantConnection!\n  session(where: SessionWhereUniqueInput!): Session\n  sessions(where: SessionWhereInput, orderBy: SessionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Session]!\n  sessionsConnection(where: SessionWhereInput, orderBy: SessionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SessionConnection!\n  user(where: UserWhereUniqueInput!): User\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  node(id: ID!): Node\n}\n\ntype Session {\n  id: ID!\n  email: String!\n  token: String!\n}\n\ntype SessionConnection {\n  pageInfo: PageInfo!\n  edges: [SessionEdge]!\n  aggregate: AggregateSession!\n}\n\ninput SessionCreateInput {\n  id: ID\n  email: String!\n  token: String!\n}\n\ntype SessionEdge {\n  node: Session!\n  cursor: String!\n}\n\nenum SessionOrderByInput {\n  id_ASC\n  id_DESC\n  email_ASC\n  email_DESC\n  token_ASC\n  token_DESC\n}\n\ntype SessionPreviousValues {\n  id: ID!\n  email: String!\n  token: String!\n}\n\ntype SessionSubscriptionPayload {\n  mutation: MutationType!\n  node: Session\n  updatedFields: [String!]\n  previousValues: SessionPreviousValues\n}\n\ninput SessionSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: SessionWhereInput\n  AND: [SessionSubscriptionWhereInput!]\n  OR: [SessionSubscriptionWhereInput!]\n  NOT: [SessionSubscriptionWhereInput!]\n}\n\ninput SessionUpdateInput {\n  email: String\n  token: String\n}\n\ninput SessionUpdateManyMutationInput {\n  email: String\n  token: String\n}\n\ninput SessionWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  email: String\n  email_not: String\n  email_in: [String!]\n  email_not_in: [String!]\n  email_lt: String\n  email_lte: String\n  email_gt: String\n  email_gte: String\n  email_contains: String\n  email_not_contains: String\n  email_starts_with: String\n  email_not_starts_with: String\n  email_ends_with: String\n  email_not_ends_with: String\n  token: String\n  token_not: String\n  token_in: [String!]\n  token_not_in: [String!]\n  token_lt: String\n  token_lte: String\n  token_gt: String\n  token_gte: String\n  token_contains: String\n  token_not_contains: String\n  token_starts_with: String\n  token_not_starts_with: String\n  token_ends_with: String\n  token_not_ends_with: String\n  AND: [SessionWhereInput!]\n  OR: [SessionWhereInput!]\n  NOT: [SessionWhereInput!]\n}\n\ninput SessionWhereUniqueInput {\n  id: ID\n  email: String\n  token: String\n}\n\ntype Subscription {\n  group(where: GroupSubscriptionWhereInput): GroupSubscriptionPayload\n  groupParticipant(where: GroupParticipantSubscriptionWhereInput): GroupParticipantSubscriptionPayload\n  session(where: SessionSubscriptionWhereInput): SessionSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\ntype User {\n  id: ID!\n  email: String!\n  name: String!\n  password: String!\n  groups(where: GroupParticipantWhereInput, orderBy: GroupParticipantOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GroupParticipant!]\n}\n\ntype UserConnection {\n  pageInfo: PageInfo!\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  id: ID\n  email: String!\n  name: String!\n  password: String!\n  groups: GroupParticipantCreateManyWithoutUserIdInput\n}\n\ninput UserCreateOneWithoutGroupsInput {\n  create: UserCreateWithoutGroupsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutGroupsInput {\n  id: ID\n  email: String!\n  name: String!\n  password: String!\n}\n\ntype UserEdge {\n  node: User!\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  email_ASC\n  email_DESC\n  name_ASC\n  name_DESC\n  password_ASC\n  password_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  email: String!\n  name: String!\n  password: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n  AND: [UserSubscriptionWhereInput!]\n  OR: [UserSubscriptionWhereInput!]\n  NOT: [UserSubscriptionWhereInput!]\n}\n\ninput UserUpdateInput {\n  email: String\n  name: String\n  password: String\n  groups: GroupParticipantUpdateManyWithoutUserIdInput\n}\n\ninput UserUpdateManyMutationInput {\n  email: String\n  name: String\n  password: String\n}\n\ninput UserUpdateOneWithoutGroupsInput {\n  create: UserCreateWithoutGroupsInput\n  update: UserUpdateWithoutGroupsDataInput\n  upsert: UserUpsertWithoutGroupsInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: UserWhereUniqueInput\n}\n\ninput UserUpdateWithoutGroupsDataInput {\n  email: String\n  name: String\n  password: String\n}\n\ninput UserUpsertWithoutGroupsInput {\n  update: UserUpdateWithoutGroupsDataInput!\n  create: UserCreateWithoutGroupsInput!\n}\n\ninput UserWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  email: String\n  email_not: String\n  email_in: [String!]\n  email_not_in: [String!]\n  email_lt: String\n  email_lte: String\n  email_gt: String\n  email_gte: String\n  email_contains: String\n  email_not_contains: String\n  email_starts_with: String\n  email_not_starts_with: String\n  email_ends_with: String\n  email_not_ends_with: String\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  password: String\n  password_not: String\n  password_in: [String!]\n  password_not_in: [String!]\n  password_lt: String\n  password_lte: String\n  password_gt: String\n  password_gte: String\n  password_contains: String\n  password_not_contains: String\n  password_starts_with: String\n  password_not_starts_with: String\n  password_ends_with: String\n  password_not_ends_with: String\n  groups_every: GroupParticipantWhereInput\n  groups_some: GroupParticipantWhereInput\n  groups_none: GroupParticipantWhereInput\n  AND: [UserWhereInput!]\n  OR: [UserWhereInput!]\n  NOT: [UserWhereInput!]\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n`\n      }\n    "
      ]
    },
    "sourceType": "script",
    "mtime": 1568703135241
  },
  "{\"sourceRoot\":\"/Users/choiminji/Desktop/workspace/rbs-backend/src/api/user\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/choiminji/Desktop/workspace/rbs-backend\",\"filename\":\"/Users/choiminji/Desktop/workspace/rbs-backend/src/api/user/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/choiminji/Desktop/workspace/rbs-backend\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/choiminji/Desktop/workspace/rbs-backend/src/api/user",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/choiminji/Desktop/workspace/rbs-backend",
      "filename": "/Users/choiminji/Desktop/workspace/rbs-backend/src/api/user/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/choiminji/Desktop/workspace/rbs-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/choiminji/Desktop/workspace/rbs-backend/src/api/user/user.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/choiminji/Desktop/workspace/rbs-backend/src/api/user/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/choiminji/Desktop/workspace/rbs-backend/src/api/user",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _prismaClient = require(\"../../../generated/prisma-client\");\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\n_dotenv[\"default\"].config(); //.env 파일 로드\n\n\nvar resolvers = {\n  Query: {\n    users: function () {\n      var _users = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee() {\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _prismaClient.prisma.users();\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function users() {\n        return _users.apply(this, arguments);\n      }\n\n      return users;\n    }(),\n    user: function () {\n      var _user = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee2(_, args) {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _prismaClient.prisma.user({\n                  email: args.email\n                });\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function user(_x, _x2) {\n        return _user.apply(this, arguments);\n      }\n\n      return user;\n    }()\n  },\n  Mutation: {\n    createUser: function () {\n      var _createUser = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee3(_, args) {\n        var email, name, password, cryptoSecret, cryptoPassword;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                email = args.email, name = args.name, password = args.password;\n                cryptoSecret = process.env.CRYPTO_SECRET;\n                cryptoPassword = _crypto[\"default\"].createHmac(\"sha1\", cryptoSecret).update(password).digest(\"base64\");\n                _context3.next = 5;\n                return _prismaClient.prisma.createUser({\n                  email: email,\n                  name: name,\n                  password: cryptoPassword\n                });\n\n              case 5:\n                return _context3.abrupt(\"return\", \"success\");\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function createUser(_x3, _x4) {\n        return _createUser.apply(this, arguments);\n      }\n\n      return createUser;\n    }(),\n    comparePassword: function () {\n      var _comparePassword = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee4(_, args) {\n        var email, password, user, compPassword, cryptoSecret, cryptoPassword;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                email = args.email, password = args.password;\n                _context4.next = 3;\n                return _prismaClient.prisma.user({\n                  email: email\n                });\n\n              case 3:\n                user = _context4.sent;\n\n                if (!user) {\n                  _context4.next = 18;\n                  break;\n                }\n\n                compPassword = user.password;\n                cryptoSecret = process.env.CRYPTO_SECRET;\n                cryptoPassword = _crypto[\"default\"].createHmac(\"sha1\", cryptoSecret).update(password).digest(\"base64\");\n\n                if (!(cryptoPassword === compPassword)) {\n                  _context4.next = 13;\n                  break;\n                }\n\n                user.flag = true; // console.log(user);\n\n                return _context4.abrupt(\"return\", user);\n\n              case 13:\n                user.flag = false;\n                user.message = \"비밀번호가 일치하지 않습니다.\";\n                return _context4.abrupt(\"return\", user);\n\n              case 16:\n                _context4.next = 19;\n                break;\n\n              case 18:\n                return _context4.abrupt(\"return\", {\n                  flag: false,\n                  message: \"존재하지 않는 이메일입니다.\"\n                });\n\n              case 19:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function comparePassword(_x5, _x6) {\n        return _comparePassword.apply(this, arguments);\n      }\n\n      return comparePassword;\n    }(),\n    deleteSession: function () {\n      var _deleteSession = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee5(_, args) {\n        var email, token, session;\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                email = args.email, token = args.token;\n                _context5.next = 3;\n                return _prismaClient.prisma.deleteSession({\n                  email: email,\n                  token: token\n                });\n\n              case 3:\n                session = _context5.sent;\n                return _context5.abrupt(\"return\", session);\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function deleteSession(_x7, _x8) {\n        return _deleteSession.apply(this, arguments);\n      }\n\n      return deleteSession;\n    }()\n  }\n};\nvar _default = resolvers;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiZG90ZW52IiwiY29uZmlnIiwicmVzb2x2ZXJzIiwiUXVlcnkiLCJ1c2VycyIsInByaXNtYSIsInVzZXIiLCJfIiwiYXJncyIsImVtYWlsIiwiTXV0YXRpb24iLCJjcmVhdGVVc2VyIiwibmFtZSIsInBhc3N3b3JkIiwiY3J5cHRvU2VjcmV0IiwicHJvY2VzcyIsImVudiIsIkNSWVBUT19TRUNSRVQiLCJjcnlwdG9QYXNzd29yZCIsImNyeXB0byIsImNyZWF0ZUhtYWMiLCJ1cGRhdGUiLCJkaWdlc3QiLCJjb21wYXJlUGFzc3dvcmQiLCJjb21wUGFzc3dvcmQiLCJmbGFnIiwibWVzc2FnZSIsImRlbGV0ZVNlc3Npb24iLCJ0b2tlbiIsInNlc3Npb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQUEsbUJBQU9DLE1BQVAsRyxDQUFpQjs7O0FBRWpCLElBQU1DLFNBQVMsR0FBRztBQUNoQkMsRUFBQUEsS0FBSyxFQUFFO0FBQ0xDLElBQUFBLEtBQUs7QUFBQTtBQUFBO0FBQUEsbUNBQUU7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsdUJBQWtCQyxxQkFBT0QsS0FBUCxFQUFsQjs7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLE9BQUY7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUEsT0FEQTtBQUVMRSxJQUFBQSxJQUFJO0FBQUE7QUFBQTtBQUFBLG1DQUFFLGtCQUFPQyxDQUFQLEVBQVVDLElBQVY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsdUJBQXlCSCxxQkFBT0MsSUFBUCxDQUFZO0FBQUVHLGtCQUFBQSxLQUFLLEVBQUVELElBQUksQ0FBQ0M7QUFBZCxpQkFBWixDQUF6Qjs7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLE9BQUY7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFGQyxHQURTO0FBS2hCQyxFQUFBQSxRQUFRLEVBQUU7QUFDUkMsSUFBQUEsVUFBVTtBQUFBO0FBQUE7QUFBQSxtQ0FBRSxrQkFBT0osQ0FBUCxFQUFVQyxJQUFWO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNGQyxnQkFBQUEsS0FERSxHQUN3QkQsSUFEeEIsQ0FDRkMsS0FERSxFQUNLRyxJQURMLEdBQ3dCSixJQUR4QixDQUNLSSxJQURMLEVBQ1dDLFFBRFgsR0FDd0JMLElBRHhCLENBQ1dLLFFBRFg7QUFFSkMsZ0JBQUFBLFlBRkksR0FFV0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLGFBRnZCO0FBR0pDLGdCQUFBQSxjQUhJLEdBR2FDLG1CQUNwQkMsVUFEb0IsQ0FDVCxNQURTLEVBQ0ROLFlBREMsRUFFcEJPLE1BRm9CLENBRWJSLFFBRmEsRUFHcEJTLE1BSG9CLENBR2IsUUFIYSxDQUhiO0FBQUE7QUFBQSx1QkFPSmpCLHFCQUFPTSxVQUFQLENBQWtCO0FBQ3RCRixrQkFBQUEsS0FBSyxFQUFFQSxLQURlO0FBRXRCRyxrQkFBQUEsSUFBSSxFQUFFQSxJQUZnQjtBQUd0QkMsa0JBQUFBLFFBQVEsRUFBRUs7QUFIWSxpQkFBbEIsQ0FQSTs7QUFBQTtBQUFBLGtEQVlILFNBWkc7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsT0FBRjs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQSxPQURGO0FBZVJLLElBQUFBLGVBQWU7QUFBQTtBQUFBO0FBQUEsbUNBQUUsa0JBQU9oQixDQUFQLEVBQVVDLElBQVY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ1BDLGdCQUFBQSxLQURPLEdBQ2FELElBRGIsQ0FDUEMsS0FETyxFQUNBSSxRQURBLEdBQ2FMLElBRGIsQ0FDQUssUUFEQTtBQUFBO0FBQUEsdUJBRUlSLHFCQUFPQyxJQUFQLENBQVk7QUFDN0JHLGtCQUFBQSxLQUFLLEVBQUVBO0FBRHNCLGlCQUFaLENBRko7O0FBQUE7QUFFVEgsZ0JBQUFBLElBRlM7O0FBQUEscUJBS1hBLElBTFc7QUFBQTtBQUFBO0FBQUE7O0FBTVBrQixnQkFBQUEsWUFOTyxHQU1RbEIsSUFBSSxDQUFDTyxRQU5iO0FBT1BDLGdCQUFBQSxZQVBPLEdBT1FDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxhQVBwQjtBQVFQQyxnQkFBQUEsY0FSTyxHQVFVQyxtQkFDcEJDLFVBRG9CLENBQ1QsTUFEUyxFQUNETixZQURDLEVBRXBCTyxNQUZvQixDQUViUixRQUZhLEVBR3BCUyxNQUhvQixDQUdiLFFBSGEsQ0FSVjs7QUFBQSxzQkFZVEosY0FBYyxLQUFLTSxZQVpWO0FBQUE7QUFBQTtBQUFBOztBQWFYbEIsZ0JBQUFBLElBQUksQ0FBQ21CLElBQUwsR0FBWSxJQUFaLENBYlcsQ0FjWDs7QUFkVyxrREFlSm5CLElBZkk7O0FBQUE7QUFpQlhBLGdCQUFBQSxJQUFJLENBQUNtQixJQUFMLEdBQVksS0FBWjtBQUNBbkIsZ0JBQUFBLElBQUksQ0FBQ29CLE9BQUwsR0FBZSxrQkFBZjtBQWxCVyxrREFtQkpwQixJQW5CSTs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQSxrREFzQk47QUFBRW1CLGtCQUFBQSxJQUFJLEVBQUUsS0FBUjtBQUFlQyxrQkFBQUEsT0FBTyxFQUFFO0FBQXhCLGlCQXRCTTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxPQUFGOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBLE9BZlA7QUF3Q1JDLElBQUFBLGFBQWE7QUFBQTtBQUFBO0FBQUEsbUNBQUUsa0JBQU9wQixDQUFQLEVBQVVDLElBQVY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0xDLGdCQUFBQSxLQURLLEdBQ1lELElBRFosQ0FDTEMsS0FESyxFQUNFbUIsS0FERixHQUNZcEIsSUFEWixDQUNFb0IsS0FERjtBQUFBO0FBQUEsdUJBRVN2QixxQkFBT3NCLGFBQVAsQ0FBcUI7QUFDekNsQixrQkFBQUEsS0FBSyxFQUFFQSxLQURrQztBQUV6Q21CLGtCQUFBQSxLQUFLLEVBQUVBO0FBRmtDLGlCQUFyQixDQUZUOztBQUFBO0FBRVBDLGdCQUFBQSxPQUZPO0FBQUEsa0RBT05BLE9BUE07O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsT0FBRjs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQXhDTDtBQUxNLENBQWxCO2VBeURlM0IsUyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY2hvaW1pbmppL0Rlc2t0b3Avd29ya3NwYWNlL3Jicy1iYWNrZW5kL3NyYy9hcGkvdXNlciIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHByaXNtYSB9IGZyb20gXCIuLi8uLi8uLi9nZW5lcmF0ZWQvcHJpc21hLWNsaWVudFwiO1xuaW1wb3J0IGNyeXB0byBmcm9tIFwiY3J5cHRvXCI7XG5pbXBvcnQgZG90ZW52IGZyb20gXCJkb3RlbnZcIjtcbmRvdGVudi5jb25maWcoKTsgLy8uZW52IO2MjOydvCDroZzrk5xcblxuY29uc3QgcmVzb2x2ZXJzID0ge1xuICBRdWVyeToge1xuICAgIHVzZXJzOiBhc3luYyAoKSA9PiBhd2FpdCBwcmlzbWEudXNlcnMoKSxcbiAgICB1c2VyOiBhc3luYyAoXywgYXJncykgPT4gYXdhaXQgcHJpc21hLnVzZXIoeyBlbWFpbDogYXJncy5lbWFpbCB9KVxuICB9LFxuICBNdXRhdGlvbjoge1xuICAgIGNyZWF0ZVVzZXI6IGFzeW5jIChfLCBhcmdzKSA9PiB7XG4gICAgICBjb25zdCB7IGVtYWlsLCBuYW1lLCBwYXNzd29yZCB9ID0gYXJncztcbiAgICAgIGNvbnN0IGNyeXB0b1NlY3JldCA9IHByb2Nlc3MuZW52LkNSWVBUT19TRUNSRVQ7XG4gICAgICBjb25zdCBjcnlwdG9QYXNzd29yZCA9IGNyeXB0b1xuICAgICAgICAuY3JlYXRlSG1hYyhcInNoYTFcIiwgY3J5cHRvU2VjcmV0KVxuICAgICAgICAudXBkYXRlKHBhc3N3b3JkKVxuICAgICAgICAuZGlnZXN0KFwiYmFzZTY0XCIpO1xuICAgICAgYXdhaXQgcHJpc21hLmNyZWF0ZVVzZXIoe1xuICAgICAgICBlbWFpbDogZW1haWwsXG4gICAgICAgIG5hbWU6IG5hbWUsXG4gICAgICAgIHBhc3N3b3JkOiBjcnlwdG9QYXNzd29yZFxuICAgICAgfSk7XG4gICAgICByZXR1cm4gXCJzdWNjZXNzXCI7XG4gICAgfSxcbiAgICBjb21wYXJlUGFzc3dvcmQ6IGFzeW5jIChfLCBhcmdzKSA9PiB7XG4gICAgICBjb25zdCB7IGVtYWlsLCBwYXNzd29yZCB9ID0gYXJncztcbiAgICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBwcmlzbWEudXNlcih7XG4gICAgICAgIGVtYWlsOiBlbWFpbFxuICAgICAgfSk7XG4gICAgICBpZiAodXNlcikge1xuICAgICAgICBjb25zdCBjb21wUGFzc3dvcmQgPSB1c2VyLnBhc3N3b3JkO1xuICAgICAgICBjb25zdCBjcnlwdG9TZWNyZXQgPSBwcm9jZXNzLmVudi5DUllQVE9fU0VDUkVUO1xuICAgICAgICBjb25zdCBjcnlwdG9QYXNzd29yZCA9IGNyeXB0b1xuICAgICAgICAgIC5jcmVhdGVIbWFjKFwic2hhMVwiLCBjcnlwdG9TZWNyZXQpXG4gICAgICAgICAgLnVwZGF0ZShwYXNzd29yZClcbiAgICAgICAgICAuZGlnZXN0KFwiYmFzZTY0XCIpO1xuICAgICAgICBpZiAoY3J5cHRvUGFzc3dvcmQgPT09IGNvbXBQYXNzd29yZCkge1xuICAgICAgICAgIHVzZXIuZmxhZyA9IHRydWU7XG4gICAgICAgICAgLy8gY29uc29sZS5sb2codXNlcik7XG4gICAgICAgICAgcmV0dXJuIHVzZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdXNlci5mbGFnID0gZmFsc2U7XG4gICAgICAgICAgdXNlci5tZXNzYWdlID0gXCLruYTrsIDrsojtmLjqsIAg7J287LmY7ZWY7KeAIOyViuyKteuLiOuLpC5cIjtcbiAgICAgICAgICByZXR1cm4gdXNlcjtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHsgZmxhZzogZmFsc2UsIG1lc3NhZ2U6IFwi7KG07J6s7ZWY7KeAIOyViuuKlCDsnbTrqZTsnbzsnoXri4jri6QuXCIgfTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGRlbGV0ZVNlc3Npb246IGFzeW5jIChfLCBhcmdzKSA9PiB7XG4gICAgICBjb25zdCB7IGVtYWlsLCB0b2tlbiB9ID0gYXJncztcbiAgICAgIGNvbnN0IHNlc3Npb24gPSBhd2FpdCBwcmlzbWEuZGVsZXRlU2Vzc2lvbih7XG4gICAgICAgIGVtYWlsOiBlbWFpbCxcbiAgICAgICAgdG9rZW46IHRva2VuXG4gICAgICB9KTtcblxuICAgICAgcmV0dXJuIHNlc3Npb247XG4gICAgfVxuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCByZXNvbHZlcnM7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "dotenv",
        "config",
        "resolvers",
        "Query",
        "users",
        "prisma",
        "user",
        "_",
        "args",
        "email",
        "Mutation",
        "createUser",
        "name",
        "password",
        "cryptoSecret",
        "process",
        "env",
        "CRYPTO_SECRET",
        "cryptoPassword",
        "crypto",
        "createHmac",
        "update",
        "digest",
        "comparePassword",
        "compPassword",
        "flag",
        "message",
        "deleteSession",
        "token",
        "session"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACAA,mBAAOC,MAAP,G,CAAiB;;;AAEjB,IAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK;AAAA;AAAA;AAAA,mCAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkBC,qBAAOD,KAAP,EAAlB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADA;AAELE,IAAAA,IAAI;AAAA;AAAA;AAAA,mCAAE,kBAAOC,CAAP,EAAUC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAyBH,qBAAOC,IAAP,CAAY;AAAEG,kBAAAA,KAAK,EAAED,IAAI,CAACC;AAAd,iBAAZ,CAAzB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAFC,GADS;AAKhBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU;AAAA;AAAA;AAAA,mCAAE,kBAAOJ,CAAP,EAAUC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACFC,gBAAAA,KADE,GACwBD,IADxB,CACFC,KADE,EACKG,IADL,GACwBJ,IADxB,CACKI,IADL,EACWC,QADX,GACwBL,IADxB,CACWK,QADX;AAEJC,gBAAAA,YAFI,GAEWC,OAAO,CAACC,GAAR,CAAYC,aAFvB;AAGJC,gBAAAA,cAHI,GAGaC,mBACpBC,UADoB,CACT,MADS,EACDN,YADC,EAEpBO,MAFoB,CAEbR,QAFa,EAGpBS,MAHoB,CAGb,QAHa,CAHb;AAAA;AAAA,uBAOJjB,qBAAOM,UAAP,CAAkB;AACtBF,kBAAAA,KAAK,EAAEA,KADe;AAEtBG,kBAAAA,IAAI,EAAEA,IAFgB;AAGtBC,kBAAAA,QAAQ,EAAEK;AAHY,iBAAlB,CAPI;;AAAA;AAAA,kDAYH,SAZG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADF;AAeRK,IAAAA,eAAe;AAAA;AAAA;AAAA,mCAAE,kBAAOhB,CAAP,EAAUC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,gBAAAA,KADO,GACaD,IADb,CACPC,KADO,EACAI,QADA,GACaL,IADb,CACAK,QADA;AAAA;AAAA,uBAEIR,qBAAOC,IAAP,CAAY;AAC7BG,kBAAAA,KAAK,EAAEA;AADsB,iBAAZ,CAFJ;;AAAA;AAETH,gBAAAA,IAFS;;AAAA,qBAKXA,IALW;AAAA;AAAA;AAAA;;AAMPkB,gBAAAA,YANO,GAMQlB,IAAI,CAACO,QANb;AAOPC,gBAAAA,YAPO,GAOQC,OAAO,CAACC,GAAR,CAAYC,aAPpB;AAQPC,gBAAAA,cARO,GAQUC,mBACpBC,UADoB,CACT,MADS,EACDN,YADC,EAEpBO,MAFoB,CAEbR,QAFa,EAGpBS,MAHoB,CAGb,QAHa,CARV;;AAAA,sBAYTJ,cAAc,KAAKM,YAZV;AAAA;AAAA;AAAA;;AAaXlB,gBAAAA,IAAI,CAACmB,IAAL,GAAY,IAAZ,CAbW,CAcX;;AAdW,kDAeJnB,IAfI;;AAAA;AAiBXA,gBAAAA,IAAI,CAACmB,IAAL,GAAY,KAAZ;AACAnB,gBAAAA,IAAI,CAACoB,OAAL,GAAe,kBAAf;AAlBW,kDAmBJpB,IAnBI;;AAAA;AAAA;AAAA;;AAAA;AAAA,kDAsBN;AAAEmB,kBAAAA,IAAI,EAAE,KAAR;AAAeC,kBAAAA,OAAO,EAAE;AAAxB,iBAtBM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAfP;AAwCRC,IAAAA,aAAa;AAAA;AAAA;AAAA,mCAAE,kBAAOpB,CAAP,EAAUC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACLC,gBAAAA,KADK,GACYD,IADZ,CACLC,KADK,EACEmB,KADF,GACYpB,IADZ,CACEoB,KADF;AAAA;AAAA,uBAESvB,qBAAOsB,aAAP,CAAqB;AACzClB,kBAAAA,KAAK,EAAEA,KADkC;AAEzCmB,kBAAAA,KAAK,EAAEA;AAFkC,iBAArB,CAFT;;AAAA;AAEPC,gBAAAA,OAFO;AAAA,kDAONA,OAPM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAxCL;AALM,CAAlB;eAyDe3B,S",
      "sourceRoot": "/Users/choiminji/Desktop/workspace/rbs-backend/src/api/user",
      "sourcesContent": [
        "import { prisma } from \"../../../generated/prisma-client\";\nimport crypto from \"crypto\";\nimport dotenv from \"dotenv\";\ndotenv.config(); //.env 파일 로드\n\nconst resolvers = {\n  Query: {\n    users: async () => await prisma.users(),\n    user: async (_, args) => await prisma.user({ email: args.email })\n  },\n  Mutation: {\n    createUser: async (_, args) => {\n      const { email, name, password } = args;\n      const cryptoSecret = process.env.CRYPTO_SECRET;\n      const cryptoPassword = crypto\n        .createHmac(\"sha1\", cryptoSecret)\n        .update(password)\n        .digest(\"base64\");\n      await prisma.createUser({\n        email: email,\n        name: name,\n        password: cryptoPassword\n      });\n      return \"success\";\n    },\n    comparePassword: async (_, args) => {\n      const { email, password } = args;\n      const user = await prisma.user({\n        email: email\n      });\n      if (user) {\n        const compPassword = user.password;\n        const cryptoSecret = process.env.CRYPTO_SECRET;\n        const cryptoPassword = crypto\n          .createHmac(\"sha1\", cryptoSecret)\n          .update(password)\n          .digest(\"base64\");\n        if (cryptoPassword === compPassword) {\n          user.flag = true;\n          // console.log(user);\n          return user;\n        } else {\n          user.flag = false;\n          user.message = \"비밀번호가 일치하지 않습니다.\";\n          return user;\n        }\n      } else {\n        return { flag: false, message: \"존재하지 않는 이메일입니다.\" };\n      }\n    },\n    deleteSession: async (_, args) => {\n      const { email, token } = args;\n      const session = await prisma.deleteSession({\n        email: email,\n        token: token\n      });\n\n      return session;\n    }\n  }\n};\n\nexport default resolvers;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1568610671622
  },
  "{\"sourceRoot\":\"/Users/choiminji/Desktop/workspace/rbs-backend/src/auth\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/choiminji/Desktop/workspace/rbs-backend\",\"filename\":\"/Users/choiminji/Desktop/workspace/rbs-backend/src/auth/googleOauth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/choiminji/Desktop/workspace/rbs-backend\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/choiminji/Desktop/workspace/rbs-backend/src/auth",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/choiminji/Desktop/workspace/rbs-backend",
      "filename": "/Users/choiminji/Desktop/workspace/rbs-backend/src/auth/googleOauth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/choiminji/Desktop/workspace/rbs-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/choiminji/Desktop/workspace/rbs-backend/src/auth/googleOauth.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/choiminji/Desktop/workspace/rbs-backend/src/auth/googleOauth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/choiminji/Desktop/workspace/rbs-backend/src/auth",
        "sourceFileName": "googleOauth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _passportGoogleOauth = _interopRequireDefault(require(\"passport-google-oauth\"));\n\nvar _prismaClient = require(\"../../generated/prisma-client\");\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\n_dotenv[\"default\"].config(); //.env 파일 로드\n\n\nvar _default = new _passportGoogleOauth[\"default\"].OAuth2Strategy({\n  clientID: process.env.PASSPORT_GOOGLE_OAUTH_CLIENT_ID,\n  clientSecret: process.env.PASSPORT_GOOGLE_OAUTH_CLIENT_SECRET,\n  callbackURL: process.env.PASSPORT_GOOGLE_OAUTH_CALLBACK_URL\n},\n/*#__PURE__*/\nfunction () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee(accessToken, refreshToken, profile, done) {\n    var email, user, returnArr;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            email = profile.emails[0].value;\n            _context.next = 3;\n            return _prismaClient.prisma.user({\n              email: email\n            });\n\n          case 3:\n            user = _context.sent;\n            returnArr = {}; // console.log(\"user====================\");\n\n            if (user === null) {\n              // 회원이 아닌 경우 회원가입 페이지로 redirect\n              // console.log(\"not member!!\");\n              returnArr = {\n                flag: false,\n                data: {\n                  email: email\n                }\n              };\n            } else {\n              // 회원인 경우 로그인 후 main 페이지로 redirect\n              // console.log(\"member!!\");\n              returnArr = {\n                flag: true,\n                data: user\n              };\n            }\n\n            return _context.abrupt(\"return\", done(null, returnArr));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}());\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdvb2dsZU9hdXRoLmpzIl0sIm5hbWVzIjpbImRvdGVudiIsImNvbmZpZyIsIkdvb2dsZVN0cmF0ZWd5IiwiT0F1dGgyU3RyYXRlZ3kiLCJjbGllbnRJRCIsInByb2Nlc3MiLCJlbnYiLCJQQVNTUE9SVF9HT09HTEVfT0FVVEhfQ0xJRU5UX0lEIiwiY2xpZW50U2VjcmV0IiwiUEFTU1BPUlRfR09PR0xFX09BVVRIX0NMSUVOVF9TRUNSRVQiLCJjYWxsYmFja1VSTCIsIlBBU1NQT1JUX0dPT0dMRV9PQVVUSF9DQUxMQkFDS19VUkwiLCJhY2Nlc3NUb2tlbiIsInJlZnJlc2hUb2tlbiIsInByb2ZpbGUiLCJkb25lIiwiZW1haWwiLCJlbWFpbHMiLCJ2YWx1ZSIsInByaXNtYSIsInVzZXIiLCJyZXR1cm5BcnIiLCJmbGFnIiwiZGF0YSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBQSxtQkFBT0MsTUFBUCxHLENBQWlCOzs7ZUFFRixJQUFJQyxnQ0FBZUMsY0FBbkIsQ0FDYjtBQUNFQyxFQUFBQSxRQUFRLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQywrQkFEeEI7QUFFRUMsRUFBQUEsWUFBWSxFQUFFSCxPQUFPLENBQUNDLEdBQVIsQ0FBWUcsbUNBRjVCO0FBR0VDLEVBQUFBLFdBQVcsRUFBRUwsT0FBTyxDQUFDQyxHQUFSLENBQVlLO0FBSDNCLENBRGE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLCtCQU1iLGlCQUFPQyxXQUFQLEVBQW9CQyxZQUFwQixFQUFrQ0MsT0FBbEMsRUFBMkNDLElBQTNDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNRQyxZQUFBQSxLQURSLEdBQ2dCRixPQUFPLENBQUNHLE1BQVIsQ0FBZSxDQUFmLEVBQWtCQyxLQURsQztBQUFBO0FBQUEsbUJBR3FCQyxxQkFBT0MsSUFBUCxDQUFZO0FBQUVKLGNBQUFBLEtBQUssRUFBRUE7QUFBVCxhQUFaLENBSHJCOztBQUFBO0FBR1FJLFlBQUFBLElBSFI7QUFJTUMsWUFBQUEsU0FKTixHQUlrQixFQUpsQixFQUtFOztBQUVBLGdCQUFJRCxJQUFJLEtBQUssSUFBYixFQUFtQjtBQUNqQjtBQUNBO0FBQ0FDLGNBQUFBLFNBQVMsR0FBRztBQUNWQyxnQkFBQUEsSUFBSSxFQUFFLEtBREk7QUFFVkMsZ0JBQUFBLElBQUksRUFBRTtBQUNKUCxrQkFBQUEsS0FBSyxFQUFFQTtBQURIO0FBRkksZUFBWjtBQU1ELGFBVEQsTUFTTztBQUNMO0FBQ0E7QUFDQUssY0FBQUEsU0FBUyxHQUFHO0FBQ1ZDLGdCQUFBQSxJQUFJLEVBQUUsSUFESTtBQUVWQyxnQkFBQUEsSUFBSSxFQUFFSDtBQUZJLGVBQVo7QUFJRDs7QUF2QkgsNkNBeUJTTCxJQUFJLENBQUMsSUFBRCxFQUFPTSxTQUFQLENBekJiOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBTmE7O0FBQUE7QUFBQTtBQUFBO0FBQUEsSSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY2hvaW1pbmppL0Rlc2t0b3Avd29ya3NwYWNlL3Jicy1iYWNrZW5kL3NyYy9hdXRoIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdvb2dsZVN0cmF0ZWd5IGZyb20gXCJwYXNzcG9ydC1nb29nbGUtb2F1dGhcIjtcbmltcG9ydCB7IHByaXNtYSB9IGZyb20gXCIuLi8uLi9nZW5lcmF0ZWQvcHJpc21hLWNsaWVudFwiO1xuaW1wb3J0IGRvdGVudiBmcm9tIFwiZG90ZW52XCI7XG5kb3RlbnYuY29uZmlnKCk7IC8vLmVudiDtjIzsnbwg66Gc65OcXG5cbmV4cG9ydCBkZWZhdWx0IG5ldyBHb29nbGVTdHJhdGVneS5PQXV0aDJTdHJhdGVneShcbiAge1xuICAgIGNsaWVudElEOiBwcm9jZXNzLmVudi5QQVNTUE9SVF9HT09HTEVfT0FVVEhfQ0xJRU5UX0lELFxuICAgIGNsaWVudFNlY3JldDogcHJvY2Vzcy5lbnYuUEFTU1BPUlRfR09PR0xFX09BVVRIX0NMSUVOVF9TRUNSRVQsXG4gICAgY2FsbGJhY2tVUkw6IHByb2Nlc3MuZW52LlBBU1NQT1JUX0dPT0dMRV9PQVVUSF9DQUxMQkFDS19VUkxcbiAgfSxcbiAgYXN5bmMgKGFjY2Vzc1Rva2VuLCByZWZyZXNoVG9rZW4sIHByb2ZpbGUsIGRvbmUpID0+IHtcbiAgICBjb25zdCBlbWFpbCA9IHByb2ZpbGUuZW1haWxzWzBdLnZhbHVlO1xuXG4gICAgY29uc3QgdXNlciA9IGF3YWl0IHByaXNtYS51c2VyKHsgZW1haWw6IGVtYWlsIH0pO1xuICAgIGxldCByZXR1cm5BcnIgPSB7fTtcbiAgICAvLyBjb25zb2xlLmxvZyhcInVzZXI9PT09PT09PT09PT09PT09PT09PVwiKTtcblxuICAgIGlmICh1c2VyID09PSBudWxsKSB7XG4gICAgICAvLyDtmozsm5DsnbQg7JWE64uMIOqyveyasCDtmozsm5DqsIDsnoUg7Y6Y7J207KeA66GcIHJlZGlyZWN0XG4gICAgICAvLyBjb25zb2xlLmxvZyhcIm5vdCBtZW1iZXIhIVwiKTtcbiAgICAgIHJldHVybkFyciA9IHtcbiAgICAgICAgZmxhZzogZmFsc2UsXG4gICAgICAgIGRhdGE6IHtcbiAgICAgICAgICBlbWFpbDogZW1haWxcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8g7ZqM7JuQ7J24IOqyveyasCDroZzqt7jsnbgg7ZuEIG1haW4g7Y6Y7J207KeA66GcIHJlZGlyZWN0XG4gICAgICAvLyBjb25zb2xlLmxvZyhcIm1lbWJlciEhXCIpO1xuICAgICAgcmV0dXJuQXJyID0ge1xuICAgICAgICBmbGFnOiB0cnVlLFxuICAgICAgICBkYXRhOiB1c2VyXG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiBkb25lKG51bGwsIHJldHVybkFycik7XG4gIH1cbik7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "googleOauth.js"
      ],
      "names": [
        "dotenv",
        "config",
        "GoogleStrategy",
        "OAuth2Strategy",
        "clientID",
        "process",
        "env",
        "PASSPORT_GOOGLE_OAUTH_CLIENT_ID",
        "clientSecret",
        "PASSPORT_GOOGLE_OAUTH_CLIENT_SECRET",
        "callbackURL",
        "PASSPORT_GOOGLE_OAUTH_CALLBACK_URL",
        "accessToken",
        "refreshToken",
        "profile",
        "done",
        "email",
        "emails",
        "value",
        "prisma",
        "user",
        "returnArr",
        "flag",
        "data"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACAA,mBAAOC,MAAP,G,CAAiB;;;eAEF,IAAIC,gCAAeC,cAAnB,CACb;AACEC,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,+BADxB;AAEEC,EAAAA,YAAY,EAAEH,OAAO,CAACC,GAAR,CAAYG,mCAF5B;AAGEC,EAAAA,WAAW,EAAEL,OAAO,CAACC,GAAR,CAAYK;AAH3B,CADa;AAAA;AAAA;AAAA;AAAA;AAAA,+BAMb,iBAAOC,WAAP,EAAoBC,YAApB,EAAkCC,OAAlC,EAA2CC,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,YAAAA,KADR,GACgBF,OAAO,CAACG,MAAR,CAAe,CAAf,EAAkBC,KADlC;AAAA;AAAA,mBAGqBC,qBAAOC,IAAP,CAAY;AAAEJ,cAAAA,KAAK,EAAEA;AAAT,aAAZ,CAHrB;;AAAA;AAGQI,YAAAA,IAHR;AAIMC,YAAAA,SAJN,GAIkB,EAJlB,EAKE;;AAEA,gBAAID,IAAI,KAAK,IAAb,EAAmB;AACjB;AACA;AACAC,cAAAA,SAAS,GAAG;AACVC,gBAAAA,IAAI,EAAE,KADI;AAEVC,gBAAAA,IAAI,EAAE;AACJP,kBAAAA,KAAK,EAAEA;AADH;AAFI,eAAZ;AAMD,aATD,MASO;AACL;AACA;AACAK,cAAAA,SAAS,GAAG;AACVC,gBAAAA,IAAI,EAAE,IADI;AAEVC,gBAAAA,IAAI,EAAEH;AAFI,eAAZ;AAID;;AAvBH,6CAyBSL,IAAI,CAAC,IAAD,EAAOM,SAAP,CAzBb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GANa;;AAAA;AAAA;AAAA;AAAA,I",
      "sourceRoot": "/Users/choiminji/Desktop/workspace/rbs-backend/src/auth",
      "sourcesContent": [
        "import GoogleStrategy from \"passport-google-oauth\";\nimport { prisma } from \"../../generated/prisma-client\";\nimport dotenv from \"dotenv\";\ndotenv.config(); //.env 파일 로드\n\nexport default new GoogleStrategy.OAuth2Strategy(\n  {\n    clientID: process.env.PASSPORT_GOOGLE_OAUTH_CLIENT_ID,\n    clientSecret: process.env.PASSPORT_GOOGLE_OAUTH_CLIENT_SECRET,\n    callbackURL: process.env.PASSPORT_GOOGLE_OAUTH_CALLBACK_URL\n  },\n  async (accessToken, refreshToken, profile, done) => {\n    const email = profile.emails[0].value;\n\n    const user = await prisma.user({ email: email });\n    let returnArr = {};\n    // console.log(\"user====================\");\n\n    if (user === null) {\n      // 회원이 아닌 경우 회원가입 페이지로 redirect\n      // console.log(\"not member!!\");\n      returnArr = {\n        flag: false,\n        data: {\n          email: email\n        }\n      };\n    } else {\n      // 회원인 경우 로그인 후 main 페이지로 redirect\n      // console.log(\"member!!\");\n      returnArr = {\n        flag: true,\n        data: user\n      };\n    }\n\n    return done(null, returnArr);\n  }\n);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569197207679
  },
  "{\"sourceRoot\":\"/Users/choiminji/Desktop/workspace/rbs-backend/src/auth\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/choiminji/Desktop/workspace/rbs-backend\",\"filename\":\"/Users/choiminji/Desktop/workspace/rbs-backend/src/auth/jwt.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/choiminji/Desktop/workspace/rbs-backend\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/choiminji/Desktop/workspace/rbs-backend/src/auth",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/choiminji/Desktop/workspace/rbs-backend",
      "filename": "/Users/choiminji/Desktop/workspace/rbs-backend/src/auth/jwt.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/choiminji/Desktop/workspace/rbs-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/choiminji/Desktop/workspace/rbs-backend/src/auth/jwt.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/choiminji/Desktop/workspace/rbs-backend/src/auth/jwt.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/choiminji/Desktop/workspace/rbs-backend/src/auth",
        "sourceFileName": "jwt.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _passportJwt = _interopRequireDefault(require(\"passport-jwt\"));\n\nvar _prismaClient = require(\"../../generated/prisma-client\");\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\n_dotenv[\"default\"].config(); //.env 파일 로드\n\n\nvar opts = {\n  jwtFromRequest: _passportJwt[\"default\"].ExtractJwt.fromAuthHeaderAsBearerToken(),\n  //BearerToken 방식으로\n  secretOrKey: process.env.JWT_SECRET\n};\n\nvar _default = new _passportJwt[\"default\"].Strategy(opts,\n/*#__PURE__*/\nfunction () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee(jwt_payload, done) {\n    var email, session;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            email = jwt_payload.email;\n            _context.next = 3;\n            return _prismaClient.prisma.session({\n              email: email\n            });\n\n          case 3:\n            session = _context.sent;\n\n            if (!session) {\n              _context.next = 8;\n              break;\n            }\n\n            return _context.abrupt(\"return\", done(null, {\n              flag: true,\n              token: session.token\n            }));\n\n          case 8:\n            return _context.abrupt(\"return\", done(null, false));\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImp3dC5qcyJdLCJuYW1lcyI6WyJkb3RlbnYiLCJjb25maWciLCJvcHRzIiwiand0RnJvbVJlcXVlc3QiLCJFeHRyYWN0Snd0IiwiZnJvbUF1dGhIZWFkZXJBc0JlYXJlclRva2VuIiwic2VjcmV0T3JLZXkiLCJwcm9jZXNzIiwiZW52IiwiSldUX1NFQ1JFVCIsIkp3dFN0cmF0ZWd5IiwiU3RyYXRlZ3kiLCJqd3RfcGF5bG9hZCIsImRvbmUiLCJlbWFpbCIsInByaXNtYSIsInNlc3Npb24iLCJmbGFnIiwidG9rZW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFFQTs7QUFDQTs7QUFDQUEsbUJBQU9DLE1BQVAsRyxDQUFpQjs7O0FBRWpCLElBQU1DLElBQUksR0FBRztBQUNYQyxFQUFBQSxjQUFjLEVBQUVDLHdCQUFXQSxVQUFYLENBQXNCQywyQkFBdEIsRUFETDtBQUMwRDtBQUNyRUMsRUFBQUEsV0FBVyxFQUFFQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUM7QUFGZCxDQUFiOztlQUtlLElBQUlDLHdCQUFZQyxRQUFoQixDQUF5QlQsSUFBekI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLCtCQUErQixpQkFBT1UsV0FBUCxFQUFvQkMsSUFBcEI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ3BDQyxZQUFBQSxLQURvQyxHQUMxQkYsV0FEMEIsQ0FDcENFLEtBRG9DO0FBQUE7QUFBQSxtQkFFdEJDLHFCQUFPQyxPQUFQLENBQWU7QUFBRUYsY0FBQUEsS0FBSyxFQUFFQTtBQUFULGFBQWYsQ0FGc0I7O0FBQUE7QUFFdENFLFlBQUFBLE9BRnNDOztBQUFBLGlCQUl4Q0EsT0FKd0M7QUFBQTtBQUFBO0FBQUE7O0FBQUEsNkNBS25DSCxJQUFJLENBQUMsSUFBRCxFQUFPO0FBQUVJLGNBQUFBLElBQUksRUFBRSxJQUFSO0FBQWNDLGNBQUFBLEtBQUssRUFBRUYsT0FBTyxDQUFDRTtBQUE3QixhQUFQLENBTCtCOztBQUFBO0FBQUEsNkNBT25DTCxJQUFJLENBQUMsSUFBRCxFQUFPLEtBQVAsQ0FQK0I7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBL0I7O0FBQUE7QUFBQTtBQUFBO0FBQUEsSSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY2hvaW1pbmppL0Rlc2t0b3Avd29ya3NwYWNlL3Jicy1iYWNrZW5kL3NyYy9hdXRoIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEp3dFN0cmF0ZWd5IGZyb20gXCJwYXNzcG9ydC1qd3RcIjtcbmltcG9ydCBFeHRyYWN0Snd0IGZyb20gXCJwYXNzcG9ydC1qd3RcIjtcbmltcG9ydCB7IHByaXNtYSB9IGZyb20gXCIuLi8uLi9nZW5lcmF0ZWQvcHJpc21hLWNsaWVudFwiO1xuaW1wb3J0IGRvdGVudiBmcm9tIFwiZG90ZW52XCI7XG5kb3RlbnYuY29uZmlnKCk7IC8vLmVudiDtjIzsnbwg66Gc65OcXG5cbmNvbnN0IG9wdHMgPSB7XG4gIGp3dEZyb21SZXF1ZXN0OiBFeHRyYWN0Snd0LkV4dHJhY3RKd3QuZnJvbUF1dGhIZWFkZXJBc0JlYXJlclRva2VuKCksIC8vQmVhcmVyVG9rZW4g67Cp7Iud7Jy866GcXG4gIHNlY3JldE9yS2V5OiBwcm9jZXNzLmVudi5KV1RfU0VDUkVUXG59O1xuXG5leHBvcnQgZGVmYXVsdCBuZXcgSnd0U3RyYXRlZ3kuU3RyYXRlZ3kob3B0cywgYXN5bmMgKGp3dF9wYXlsb2FkLCBkb25lKSA9PiB7XG4gIGNvbnN0IHsgZW1haWwgfSA9IGp3dF9wYXlsb2FkO1xuICBjb25zdCBzZXNzaW9uID0gYXdhaXQgcHJpc21hLnNlc3Npb24oeyBlbWFpbDogZW1haWwgfSk7XG5cbiAgaWYgKHNlc3Npb24pIHtcbiAgICByZXR1cm4gZG9uZShudWxsLCB7IGZsYWc6IHRydWUsIHRva2VuOiBzZXNzaW9uLnRva2VuIH0pO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBkb25lKG51bGwsIGZhbHNlKTtcbiAgfVxufSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "jwt.js"
      ],
      "names": [
        "dotenv",
        "config",
        "opts",
        "jwtFromRequest",
        "ExtractJwt",
        "fromAuthHeaderAsBearerToken",
        "secretOrKey",
        "process",
        "env",
        "JWT_SECRET",
        "JwtStrategy",
        "Strategy",
        "jwt_payload",
        "done",
        "email",
        "prisma",
        "session",
        "flag",
        "token"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACAA,mBAAOC,MAAP,G,CAAiB;;;AAEjB,IAAMC,IAAI,GAAG;AACXC,EAAAA,cAAc,EAAEC,wBAAWA,UAAX,CAAsBC,2BAAtB,EADL;AAC0D;AACrEC,EAAAA,WAAW,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAFd,CAAb;;eAKe,IAAIC,wBAAYC,QAAhB,CAAyBT,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA+B,iBAAOU,WAAP,EAAoBC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AACpCC,YAAAA,KADoC,GAC1BF,WAD0B,CACpCE,KADoC;AAAA;AAAA,mBAEtBC,qBAAOC,OAAP,CAAe;AAAEF,cAAAA,KAAK,EAAEA;AAAT,aAAf,CAFsB;;AAAA;AAEtCE,YAAAA,OAFsC;;AAAA,iBAIxCA,OAJwC;AAAA;AAAA;AAAA;;AAAA,6CAKnCH,IAAI,CAAC,IAAD,EAAO;AAAEI,cAAAA,IAAI,EAAE,IAAR;AAAcC,cAAAA,KAAK,EAAEF,OAAO,CAACE;AAA7B,aAAP,CAL+B;;AAAA;AAAA,6CAOnCL,IAAI,CAAC,IAAD,EAAO,KAAP,CAP+B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAAA;AAAA;AAAA;AAAA,I",
      "sourceRoot": "/Users/choiminji/Desktop/workspace/rbs-backend/src/auth",
      "sourcesContent": [
        "import JwtStrategy from \"passport-jwt\";\nimport ExtractJwt from \"passport-jwt\";\nimport { prisma } from \"../../generated/prisma-client\";\nimport dotenv from \"dotenv\";\ndotenv.config(); //.env 파일 로드\n\nconst opts = {\n  jwtFromRequest: ExtractJwt.ExtractJwt.fromAuthHeaderAsBearerToken(), //BearerToken 방식으로\n  secretOrKey: process.env.JWT_SECRET\n};\n\nexport default new JwtStrategy.Strategy(opts, async (jwt_payload, done) => {\n  const { email } = jwt_payload;\n  const session = await prisma.session({ email: email });\n\n  if (session) {\n    return done(null, { flag: true, token: session.token });\n  } else {\n    return done(null, false);\n  }\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1568966538846
  }
}